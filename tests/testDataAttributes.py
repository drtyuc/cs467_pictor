from DMT.GameData import DataManager
import unittest

dm = DataManager()
dm.loadNewGame()


class RoomObjects(unittest.TestCase):
    print("RoomObjects")
    data = [ {'room':'ap','expected':['lidless eye','wall of flames']}, 
             {'room':'ar','expected':['sabre','armor','warhammer','helmet', 'trestle table']},
             {'room':'bd','expected':['twin bed','cedar trunk','safe','wooden shelves','gem','wooden lever','golden key']},
             {'room':'bh','expected':['fine china','chandelier','dining table','earthenware','bottle of water']},
             {'room':'ca','expected':['stoneware','bar stool','gateleg table','portrait','note']},
             {'room':'ce','expected':['bat skeleton','machete','shale rocks']},              
             {'room':'cl','expected':['human skeleton','mattress','book of locks','milking stool']},
             {'room':'ct','expected':['armoire','cloak','iron lever']},
             {'room':'hw','expected':['wool rug','painting']}, 
             {'room':'jl','expected':['carver chair','scroll','desk','key rung','bottle of gatorade','bottleopener']},
             {'room':'kt','expected':['matches','cooking hearth','green apple','kitchen knife','kitchen table']},               
             {'room':'ot','expected':['sign','tree']},
             {'room':'pw','expected':['cat skeleton','tools','slate rocks']},
             {'room':'sq','expected':['bunk bed','round table','rocking chair','brass lantern','bearskin','red apple']},
             {'room':'sr','expected':['lockpick','mushrooms','turkish rug','metal shelves','trapdoor']},
             {'room':'tr','expected':['treasure','iron trunk','tapestries','altar','magical ring', 'axe']},
             {'room':'wl','expected':['corner shelves','book of spells','slate of runes','high table','broken lantern']} ] 
             
    def test_RoomObjects(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            self.assertItemsEqual(dm.getRoomObjects(), i['expected'],   "Failed: " + i['room'] + "   " + str(dm.getRoomObjects()))


class RoomExits(unittest.TestCase):
    print("RoomExits")
    data = [ {'room':'ap',   'expected':['ap1']}, 
             {'room':'ar',   'expected':['ar1','ar2','ar3']},
             {'room':'bd',   'expected':['bd1']},
             {'room':'bh',   'expected':['bh1','bh2']},
             {'room':'ca',   'expected':['ca1','ca2']},
             {'room':'ce',   'expected':['ce1','ce2']},              
             {'room':'cl',   'expected':['cl1']},
             {'room':'hw',   'expected':['hw1','hw2','hw3']}, 
             {'room':'jl',   'expected':['jl1','jl2']},
             {'room':'kt',   'expected':['kt1','kt2','kt3']},               
             {'room':'ot',   'expected':['out']},
             {'room':'pw',   'expected':['pw1','pw2']},
             {'room':'sq',   'expected':['sq1','sq2']},
             {'room':'sr',   'expected':['sr1']},
             {'room':'tr',   'expected':['tr1']},
             {'room':'wl',   'expected':['wl1','wl2']} ] 
             
    def test_RoomExits(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            self.assertItemsEqual(dm.getRoomExits(), i['expected'],   "Failed: " + i['room'])


class RoomLighted(unittest.TestCase):
    print("RoomLighted")
    data = [ {'room':'ap',   'expected':True}, 
             {'room':'ar',   'expected':True},
             {'room':'bd',   'expected':False},
             {'room':'bh',   'expected':True},
             {'room':'ca',   'expected':True},
             {'room':'ce',   'expected':True},              
             {'room':'cl',   'expected':False},
             {'room':'ct',   'expected':False},
             {'room':'hw',   'expected':True}, 
             {'room':'jl',   'expected':False},
             {'room':'kt',   'expected':True},               
             {'room':'ot',   'expected':True},
             {'room':'pw',   'expected':False},
             {'room':'sq',   'expected':True},
             {'room':'sr',   'expected':False},
             {'room':'tr',   'expected':False},
             {'room':'wl',   'expected':False} ] 
             
    def test_RoomLighted(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            if i['expected']:
                self.assertTrue(dm.isRoomLighted(), "Failed: " + i['room'])
            else:
                self.assertFalse(dm.isRoomLighted(), "Failed: " + i['room'])
 
 
class RoomDiscovered(unittest.TestCase):
    print("RoomDiscoverd")
    data = [ {'room':'ap',   'expected':False}, 
             {'room':'ar',   'expected':False},
             {'room':'bd',   'expected':False},
             {'room':'bh',   'expected':False},
             {'room':'ca',   'expected':False},
             {'room':'ce',   'expected':False},              
             {'room':'cl',   'expected':False},
             {'room':'ct',   'expected':False},
             {'room':'hw',   'expected':False}, 
             {'room':'jl',   'expected':False},
             {'room':'kt',   'expected':False},               
             {'room':'ot',   'expected':False},
             {'room':'pw',   'expected':False},
             {'room':'sq',   'expected':False},
             {'room':'sr',   'expected':False},
             {'room':'tr',   'expected':False},
             {'room':'wl',   'expected':False} ] 
             
    def test_RoomDiscovered(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            if i['expected']:
                self.assertTrue(dm.isRoomDiscovered(), "Failed: " + i['room'])
            else:
                self.assertFalse(dm.isRoomDiscovered(), "Failed: " + i['room'])
 

class ExitDirection(unittest.TestCase):
    print("ExitDirection")
    data = [ {'exit':'ap1',          'expected':'west'}, 
             {'exit':'ar1',          'expected':'north'},
             {'exit':'ar2',          'expected':'east'},
             {'exit':'ar3',          'expected':'south'},
             {'exit':'bd1',          'expected':'east'},
             {'exit':'bh1',          'expected':'north'},  
             {'exit':'bh2',          'expected':'east'},
             {'exit':'ca1',          'expected':'south'},
             {'exit':'ca2',          'expected':'east'},
             {'exit':'ce1',          'expected':'south'},
             {'exit':'ce2',          'expected':'north'},                 
             {'exit':'cl1',          'expected':'west'},
             {'exit':'hw1',          'expected':'west'},
             {'exit':'hw2',          'expected':'east'},
             {'exit':'hw3',          'expected':'south'},   
             {'exit':'jl1',          'expected':'west'},
             {'exit':'jl2',          'expected':'east'},
             {'exit':'kt1',          'expected':'west'},
             {'exit':'kt2',          'expected':'east'},
             {'exit':'kt3',          'expected':'south'},               
             {'exit':'out',          'expected':'north'},
             {'exit':'pw1',          'expected':'south'},
             {'exit':'pw2',          'expected':'north'},
             {'exit':'sq1',          'expected':'north'},
             {'exit':'sq2',          'expected':'west'},   
             {'exit':'sr1',          'expected':'west'},
             {'exit':'tr1',          'expected':'west'},
             {'exit':'wl1',          'expected':'west'},
             {'exit':'wl2',          'expected':'east'} ] 
             
    def test_ExitDirection(self):
        for i in self.data:
            self.assertEqual(dm.getExitDirection(i['exit']),  i['expected'],  "Failed: " + i['exit'])


class ExitToRoom(unittest.TestCase):
    print("ExitToRoom")
    data = [ {'exit':'ap1',          'expected':'wl'}, 
             {'exit':'ar1',          'expected':'hw'},
             {'exit':'ar2',          'expected':'jl'},
             {'exit':'ar3',          'expected':'sq'},
             {'exit':'bd1',          'expected':'sq'},
             {'exit':'bh1',          'expected':'kt'},  
             {'exit':'bh2',          'expected':'hw'},
             {'exit':'ca1',          'expected':'pw'},
             {'exit':'ca2',          'expected':'kt'},
             {'exit':'ce1',          'expected':'ot'},
             {'exit':'ce2',          'expected':'pw'},                 
             {'exit':'cl1',          'expected':'jl'},
             {'exit':'hw1',          'expected':'bh'},
             {'exit':'hw2',          'expected':'wl'},
             {'exit':'hw3',          'expected':'ar'},   
             {'exit':'jl1',          'expected':'ar'},
             {'exit':'jl2',          'expected':'cl'},
             {'exit':'kt1',          'expected':'ca'},
             {'exit':'kt2',          'expected':'sr'},
             {'exit':'kt3',          'expected':'bh'},               
             {'exit':'out',          'expected':'ce'},
             {'exit':'pw1',          'expected':'ce'},
             {'exit':'pw2',          'expected':'ca'},
             {'exit':'sq1',          'expected':'ar'},
             {'exit':'sq2',          'expected':'bd'},   
             {'exit':'sr1',          'expected':'kt'},
             {'exit':'tr1',          'expected':'sr'},
             {'exit':'wl1',          'expected':'hw'},
             {'exit':'wl2',          'expected':'ap'} ] 
             
    def test_ExitToRoom(self):
        for i in self.data:
            self.assertEqual(dm.getExitToRoom(i['exit']),  i['expected'],  "Failed: " + i['exit'])
 

class ExitKeyObject(unittest.TestCase):
    print("ExitKeyObject")
    data = [ {'exit':'ap1',          'expected':''}, 
             {'exit':'ar1',          'expected':''},
             {'exit':'ar2',          'expected':''},
             {'exit':'ar3',          'expected':''},
             {'exit':'bd1',          'expected':''},
             {'exit':'bh1',          'expected':''},  
             {'exit':'bh2',          'expected':''},
             {'exit':'ca1',          'expected':''},
             {'exit':'ca2',          'expected':''},
             {'exit':'ce1',          'expected':'golden key'},
             {'exit':'ce2',          'expected':''},                 
             {'exit':'cl1',          'expected':''},
             {'exit':'hw1',          'expected':''},
             {'exit':'hw2',          'expected':''},
             {'exit':'hw3',          'expected':''},   
             {'exit':'jl1',          'expected':''},
             {'exit':'jl2',          'expected':''},
             {'exit':'kt1',          'expected':''},
             {'exit':'kt2',          'expected':''},
             {'exit':'kt3',          'expected':''},               
             {'exit':'out',          'expected':''},
             {'exit':'pw1',          'expected':''},
             {'exit':'pw2',          'expected':''},
             {'exit':'sq1',          'expected':''},
             {'exit':'sq2',          'expected':''},   
             {'exit':'sr1',          'expected':''},
             {'exit':'tr1',          'expected':''},
             {'exit':'wl1',          'expected':''},
             {'exit':'wl2',          'expected':''} ] 
             
    def test_ExitKeyObject(self):
        for i in self.data:
            self.assertEqual(dm.getExitKeyObject(i['exit']),  i['expected'],  "Failed: " + i['exit'])
 

class ExitVisible(unittest.TestCase):
    print("ExitVisible")
    data = [ {'exit':'ap1',          'expected':True}, 
             {'exit':'ar1',          'expected':True},
             {'exit':'ar2',          'expected':True},
             {'exit':'ar3',          'expected':True},
             {'exit':'bd1',          'expected':True},
             {'exit':'bh1',          'expected':True},  
             {'exit':'bh2',          'expected':True},
             {'exit':'ca1',          'expected':True},
             {'exit':'ca2',          'expected':True},
             {'exit':'ce1',          'expected':True},
             {'exit':'ce2',          'expected':True},                 
             {'exit':'cl1',          'expected':True},
             {'exit':'hw1',          'expected':True},
             {'exit':'hw2',          'expected':True},
             {'exit':'hw3',          'expected':True},   
             {'exit':'jl1',          'expected':True},
             {'exit':'jl2',          'expected':True},
             {'exit':'kt1',          'expected':True},
             {'exit':'kt2',          'expected':True},
             {'exit':'kt3',          'expected':True},               
             {'exit':'out',          'expected':True},
             {'exit':'pw1',          'expected':True},
             {'exit':'pw2',          'expected':True},
             {'exit':'sq1',          'expected':True},
             {'exit':'sq2',          'expected':True},   
             {'exit':'sr1',          'expected':True},
             {'exit':'tr1',          'expected':True},
             {'exit':'wl1',          'expected':True},
             {'exit':'wl2',          'expected':True} ] 
             
    def test_ExitVisible(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isExitVisible(i['exit']), "Failed: " + i['exit'])
            else:
                self.assertFalse(dm.isExitVisible(i['exit']), "Failed: " + i['exit'])
 
 
 
class ExitUnlocked(unittest.TestCase):
    print("ExitUnlocked")
    data = [ {'exit':'ap1',          'expected':True}, 
             {'exit':'ar1',          'expected':True},
             {'exit':'ar2',          'expected':True},
             {'exit':'ar3',          'expected':True},
             {'exit':'bd1',          'expected':True},
             {'exit':'bh1',          'expected':True},  
             {'exit':'bh2',          'expected':True},
             {'exit':'ca1',          'expected':True},
             {'exit':'ca2',          'expected':True},
             {'exit':'ce1',          'expected':False},
             {'exit':'ce2',          'expected':True},                 
             {'exit':'cl1',          'expected':True},
             {'exit':'hw1',          'expected':True},
             {'exit':'hw2',          'expected':True},
             {'exit':'hw3',          'expected':True},   
             {'exit':'jl1',          'expected':True},
             {'exit':'jl2',          'expected':True},
             {'exit':'kt1',          'expected':True},
             {'exit':'kt2',          'expected':True},
             {'exit':'kt3',          'expected':True},               
             {'exit':'out',          'expected':True},
             {'exit':'pw1',          'expected':True},
             {'exit':'pw2',          'expected':True},
             {'exit':'sq1',          'expected':True},
             {'exit':'sq2',          'expected':True},   
             {'exit':'sr1',          'expected':True},
             {'exit':'tr1',          'expected':True},
             {'exit':'wl1',          'expected':True},
             {'exit':'wl2',          'expected':True} ] 
             
    def test_ExitUnlocked(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isExitUnlocked(i['exit']), "Failed: " + i['exit'])
            else:
                self.assertFalse(dm.isExitUnlocked(i['exit']), "Failed: " + i['exit'])
   
                


class ObjectVisibility(unittest.TestCase):
    print("ObjectVisibile")
    data = [ {'object':'altar',       'expected':True}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':True},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':True},
             {'object':'bunk bed',         'expected':True},
             {'object':'twin bed',         'expected':True},
             {'object':'bat skeleton',       'expected':True},
             {'object':'cat skeleton',       'expected':True},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':True},
             {'object':'rocking chair',       'expected':True},     
             {'object':'chandelier',  'expected':True},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':True},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':True},
             {'object':'lidless eye',         'expected':True},
             {'object':'wall of flames',      'expected':True},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':True},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':True},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':True},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':True},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':True},     
             {'object':'painting',    'expected':True},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':True},
             {'object':'slate rocks',       'expected':True},     
             {'object':'turkish rug',         'expected':True},
             {'object':'wool rug',         'expected':True},   
             {'object':'slate of runes',       'expected':True},
             {'object':'safe',        'expected':True},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':True},
             {'object':'corner shelves',       'expected':True},
             {'object':'wooden shelves',       'expected':True},     
             {'object':'sign',        'expected':True},
             {'object':'bar stool',       'expected':True},  
             {'object':'milking stool',       'expected':True},
             {'object':'machete',       'expected':True},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':True},
             {'object':'kitchen table',       'expected':True},
             {'object':'dining table',       'expected':True},     
             {'object':'high table',       'expected':True},
             {'object':'round table',       'expected':True},
             {'object':'trestle table',       'expected':True},
             {'object':'tapestries',  'expected':True},     
             {'object':'tools',       'expected':True},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':True},     
             {'object':'iron trunk',       'expected':True},
             {'object':'cedar trunk',       'expected':True},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectVisibility(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectVisible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectVisible(i['object']), "Failed: " + i['object'])
                
   
class ObjectAcquirable(unittest.TestCase):
    print("ObjectAcquireable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':True},
             {'object':'red apple',       'expected':True},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':True},
             {'object':'axe',         'expected':True},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':True},
             {'object':'book of locks',        'expected':True},
             {'object':'bottle of water',      'expected':True},     
             {'object':'bottle of gatorade',      'expected':True},
             {'object':'bottleopener','expected':True},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':True},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':True},     
             {'object':'fine china',  'expected':True},
             {'object':'earthenware',  'expected':True},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':True},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':True},
             {'object':'golden key',         'expected':True},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':True},
             {'object':'broken lantern',     'expected':True},
             {'object':'brass lantern',     'expected':True},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':True},
             {'object':'matches',     'expected':True},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':True},
             {'object':'note',        'expected':True},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':True},
             {'object':'shale rocks',       'expected':True},
             {'object':'slate rocks',       'expected':True},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':True},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':True},     
             {'object':'sabre',       'expected':True},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':True},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':True} ]
 
    def test_ObjectAcquirable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectAcquirable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectAcquirable(i['object']), "Failed: " + i['object'])
                
      
   
class ObjectDrinkable(unittest.TestCase):
    print("ObjectDrinkable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':True},     
             {'object':'bottle of gatorade',      'expected':True},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectDrinkable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectDrinkable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectDrinkable(i['object']), "Failed: " + i['object'])
    
    
                
      
class ObjectEdible(unittest.TestCase):
    print("ObjectEdible")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':True},
             {'object':'red apple',       'expected':True},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':True},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectEdible(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEdible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEdible(i['object']), "Failed: " + i['object'])      
   

      
class ObjectEquippable(unittest.TestCase):
    print("ObjectEquippable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':True},
             {'object':'axe',         'expected':True},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':True},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':True},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':True},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':True},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':True},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':True},     
             {'object':'sabre',       'expected':True},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':True} ]
 
    def test_ObjectEquippable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEquippable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEquippable(i['object']), "Failed: " + i['object'])      
   
  

      
class ObjectLayable(unittest.TestCase):
    print("ObjectLayable")
    data = [ {'object':'altar',       'expected':True}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':True},
             {'object':'bunk bed',         'expected':True},
             {'object':'twin bed',         'expected':True},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':True},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':True},
             {'object':'wool rug',         'expected':True},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLayable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLayable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLayable(i['object']), "Failed: " + i['object'])      
   

class ObjectLightable(unittest.TestCase):
    print("ObjectLightable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':True},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLightable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLightable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLightable(i['object']), "Failed: " + i['object'])      
   


class ObjectLockable(unittest.TestCase):
    print("ObjectEdible")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':True},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':True},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLockable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLockable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLockable(i['object']), "Failed: " + i['object'])      
   


class ObjectPullable(unittest.TestCase):
    print("ObjectPullable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':True},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':True},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectPullable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPullable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPullable(i['object']), "Failed: " + i['object'])      
   

class ObjectPushable(unittest.TestCase):
    print("ObjectPushable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':True},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectPushable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPushable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPushable(i['object']), "Failed: " + i['object'])      
   

class ObjectReadable(unittest.TestCase):
    print("ObjectReadable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':True},
             {'object':'book of locks',        'expected':True},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':True},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':True},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':True},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':True},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectReadable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectReadable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectReadable(i['object']), "Failed: " + i['object'])      
   

class ObjectSitble(unittest.TestCase):
    print("ObjectSitble")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':True},
             {'object':'twin bed',         'expected':True},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':True},
             {'object':'rocking chair',       'expected':True},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':True},  
             {'object':'milking stool',       'expected':True},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectSitble(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectSitable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectSitable(i['object']), "Failed: " + i['object'])      
      

class ObjectWieldable(unittest.TestCase):
    print("ObjectWieldable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':True},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':True},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':True},     
             {'object':'sabre',       'expected':True},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':True} ]
 
    def test_ObjectWieldable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectWieldable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectWieldable(i['object']), "Failed: " + i['object'])      
 


class ObjectLookInside(unittest.TestCase):
    print("ObjectLookInside")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':True},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':True},
             {'object':'desk',        'expected':True},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':True},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':True},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':True},     
             {'object':'scroll',      'expected':True},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':True},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':True},
             {'object':'cedar trunk',       'expected':True},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLookInside(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookInsidePossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookInsidePossible(i['object']), "Failed: " + i['object']) 


class ObjectLookOn(unittest.TestCase):
    print("ObjectLookOn")
    data = [ {'object':'altar',       'expected':True}, 
             {'object':'green apple',       'expected':True},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':True},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':True},
             {'object':'book of spells',        'expected':True},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':True},     
             {'object':'bottle of gatorade',      'expected':True},
             {'object':'bottleopener','expected':True},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':True},
             {'object':'stoneware',  'expected':True},     
             {'object':'fine china',  'expected':True},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':True},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':True},
             {'object':'broken lantern',     'expected':True},
             {'object':'brass lantern',     'expected':True},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':True},
             {'object':'matches',     'expected':True},     
             {'object':'mattress',    'expected':True},
             {'object':'mushrooms',   'expected':True},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':True},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':True},
             {'object':'corner shelves',       'expected':True},
             {'object':'wooden shelves',       'expected':True},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':True},
             {'object':'gateleg table',       'expected':True},
             {'object':'kitchen table',       'expected':True},
             {'object':'dining table',       'expected':True},     
             {'object':'high table',       'expected':True},
             {'object':'round table',       'expected':True},
             {'object':'trestle table',       'expected':True},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':True} ]
 
    def test_ObjectLookOn(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookOnPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookOnPossible(i['object']), "Failed: " + i['object']) 

  
class ObjectLookAbove(unittest.TestCase):
    print("ObjectLookAbove")
    data = [ {'object':'altar',       'expected':True}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':True},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLookAbove(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookAbovePossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookAbovePossible(i['object']), "Failed: " + i['object']) 
 
class ObjectLookUnder(unittest.TestCase):
    print("ObjectLookUnder")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':True},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':True},
             {'object':'bunk bed',         'expected':True},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':True},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':True},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':True},
             {'object':'wool rug',         'expected':True},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':True},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLookUnder(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookUnderPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookUnderPossible(i['object']), "Failed: " + i['object']) 
 
 
class ObjectLookBehind(unittest.TestCase):
    print("ObjectLookBehind")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':True},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':True},
             {'object':'portrait',    'expected':True},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':True},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLookBehind(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookBehindPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookBehindPossible(i['object']), "Failed: " + i['object']) 
 
class ObjectUnlocked(unittest.TestCase):
    print("ObjectUnlocked")
    data = [ {'object':'altar',       'expected':True}, 
             {'object':'green apple',       'expected':True},
             {'object':'red apple',       'expected':True},
             {'object':'armoire',     'expected':True},
             {'object':'armor',       'expected':True},
             {'object':'axe',         'expected':True},
             {'object':'bearskin',    'expected':True},
             {'object':'bunk bed',         'expected':True},
             {'object':'twin bed',         'expected':True},
             {'object':'bat skeleton',       'expected':True},
             {'object':'cat skeleton',       'expected':True},     
             {'object':'human skeleton',       'expected':True},
             {'object':'book of spells',        'expected':True},
             {'object':'book of locks',        'expected':True},
             {'object':'bottle of water',      'expected':True},     
             {'object':'bottle of gatorade',      'expected':True},
             {'object':'bottleopener','expected':True},
             {'object':'carver chair',       'expected':True},
             {'object':'rocking chair',       'expected':True},     
             {'object':'chandelier',  'expected':True},
             {'object':'cloak',       'expected':True},
             {'object':'desk',        'expected':True},
             {'object':'stoneware',  'expected':True},     
             {'object':'fine china',  'expected':True},
             {'object':'earthenware',  'expected':True},
             {'object':'lidless eye',         'expected':True},
             {'object':'wall of flames',      'expected':True},     
             {'object':'gem',         'expected':True},
             {'object':'cooking hearth',      'expected':True},
             {'object':'helmet',      'expected':True},
             {'object':'golden key',         'expected':True},     
             {'object':'key rung',     'expected':True},
             {'object':'kitchen knife',       'expected':True},
             {'object':'broken lantern',     'expected':True},
             {'object':'brass lantern',     'expected':True},     
             {'object':'wooden lever',       'expected':True},
             {'object':'iron lever',       'expected':True},
             {'object':'lockpick',    'expected':True},
             {'object':'matches',     'expected':True},     
             {'object':'mattress',    'expected':True},
             {'object':'mushrooms',   'expected':True},
             {'object':'note',        'expected':True},
             {'object':'portrait',    'expected':True},     
             {'object':'painting',    'expected':True},
             {'object':'magical ring',        'expected':True},
             {'object':'shale rocks',       'expected':True},
             {'object':'slate rocks',       'expected':True},     
             {'object':'turkish rug',         'expected':True},
             {'object':'wool rug',         'expected':True},   
             {'object':'slate of runes',       'expected':True},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':True},
             {'object':'metal shelves',       'expected':True},
             {'object':'corner shelves',       'expected':True},
             {'object':'wooden shelves',       'expected':True},     
             {'object':'sign',        'expected':True},
             {'object':'bar stool',       'expected':True},  
             {'object':'milking stool',       'expected':True},
             {'object':'machete',       'expected':True},     
             {'object':'sabre',       'expected':True},
             {'object':'gateleg table',       'expected':True},
             {'object':'kitchen table',       'expected':True},
             {'object':'dining table',       'expected':True},     
             {'object':'high table',       'expected':True},
             {'object':'round table',       'expected':True},
             {'object':'trestle table',       'expected':True},
             {'object':'tapestries',  'expected':True},     
             {'object':'tools',       'expected':True},
             {'object':'trapdoor',    'expected':True},
             {'object':'treasure',    'expected':True},
             {'object':'tree',        'expected':True},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':True},
             {'object':'warhammer',   'expected':True} ]
 
    def test_ObjectUnlocked(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectUnlocked(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectUnlocked(i['object']), "Failed: " + i['object']) 
 
       

class ObjectLighted(unittest.TestCase):
    print("ObjectLighted")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectLighted(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLighted(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLighted(i['object']), "Failed: " + i['object']) 
 

class ObjectEquipped(unittest.TestCase):
    print("ObjectEquipped")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectEquipped(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEquipped(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEquipped(i['object']), "Failed: " + i['object']) 
 

class ObjectRead(unittest.TestCase):
    print("ObjectRead")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectRead(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectRead(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectRead(i['object']), "Failed: " + i['object']) 
 
class ObjectUseable(unittest.TestCase):
    print("ObjectUseable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectUseable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectUseable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectUseable(i['object']), "Failed: " + i['object']) 
 
class ObjectOpenable(unittest.TestCase):
    print("ObjectOpenable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectOpenable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectOpenable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectOpenable(i['object']), "Failed: " + i['object']) 
 

class ObjectPickable(unittest.TestCase):
    print("ObjectPickable")
    data = [ {'object':'altar',       'expected':False}, 
             {'object':'green apple',       'expected':False},
             {'object':'red apple',       'expected':False},
             {'object':'armoire',     'expected':False},
             {'object':'armor',       'expected':False},
             {'object':'axe',         'expected':False},
             {'object':'bearskin',    'expected':False},
             {'object':'bunk bed',         'expected':False},
             {'object':'twin bed',         'expected':False},
             {'object':'bat skeleton',       'expected':False},
             {'object':'cat skeleton',       'expected':False},     
             {'object':'human skeleton',       'expected':False},
             {'object':'book of spells',        'expected':False},
             {'object':'book of locks',        'expected':False},
             {'object':'bottle of water',      'expected':False},     
             {'object':'bottle of gatorade',      'expected':False},
             {'object':'bottleopener','expected':False},
             {'object':'carver chair',       'expected':False},
             {'object':'rocking chair',       'expected':False},     
             {'object':'chandelier',  'expected':False},
             {'object':'cloak',       'expected':False},
             {'object':'desk',        'expected':False},
             {'object':'stoneware',  'expected':False},     
             {'object':'fine china',  'expected':False},
             {'object':'earthenware',  'expected':False},
             {'object':'lidless eye',         'expected':False},
             {'object':'wall of flames',      'expected':False},     
             {'object':'gem',         'expected':False},
             {'object':'cooking hearth',      'expected':False},
             {'object':'helmet',      'expected':False},
             {'object':'golden key',         'expected':False},     
             {'object':'key rung',     'expected':False},
             {'object':'kitchen knife',       'expected':False},
             {'object':'broken lantern',     'expected':False},
             {'object':'brass lantern',     'expected':False},     
             {'object':'wooden lever',       'expected':False},
             {'object':'iron lever',       'expected':False},
             {'object':'lockpick',    'expected':False},
             {'object':'matches',     'expected':False},     
             {'object':'mattress',    'expected':False},
             {'object':'mushrooms',   'expected':False},
             {'object':'note',        'expected':False},
             {'object':'portrait',    'expected':False},     
             {'object':'painting',    'expected':False},
             {'object':'magical ring',        'expected':False},
             {'object':'shale rocks',       'expected':False},
             {'object':'slate rocks',       'expected':False},     
             {'object':'turkish rug',         'expected':False},
             {'object':'wool rug',         'expected':False},   
             {'object':'slate of runes',       'expected':False},
             {'object':'safe',        'expected':False},     
             {'object':'scroll',      'expected':False},
             {'object':'metal shelves',       'expected':False},
             {'object':'corner shelves',       'expected':False},
             {'object':'wooden shelves',       'expected':False},     
             {'object':'sign',        'expected':False},
             {'object':'bar stool',       'expected':False},  
             {'object':'milking stool',       'expected':False},
             {'object':'machete',       'expected':False},     
             {'object':'sabre',       'expected':False},
             {'object':'gateleg table',       'expected':False},
             {'object':'kitchen table',       'expected':False},
             {'object':'dining table',       'expected':False},     
             {'object':'high table',       'expected':False},
             {'object':'round table',       'expected':False},
             {'object':'trestle table',       'expected':False},
             {'object':'tapestries',  'expected':False},     
             {'object':'tools',       'expected':False},
             {'object':'trapdoor',    'expected':False},
             {'object':'treasure',    'expected':False},
             {'object':'tree',        'expected':False},     
             {'object':'iron trunk',       'expected':False},
             {'object':'cedar trunk',       'expected':False},
             {'object':'warhammer',   'expected':False} ]
 
    def test_ObjectPickable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPickable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPickable(i['object']), "Failed: " + i['object']) 
 
class ObjectLocation(unittest.TestCase):
    print("ObjectLocation")
    data = [ {'object':'altar',       'expected':'tr'}, 
             {'object':'green apple',       'expected':'kitchen table'},
             {'object':'red apple',       'expected':'bunk bed'},
             {'object':'armoire',     'expected':'ct'},
             {'object':'armor',       'expected':'trestle table'},
             {'object':'axe',         'expected':'altar'},
             {'object':'bearskin',    'expected':'sq'},
             {'object':'bunk bed',         'expected':'sq'},
             {'object':'twin bed',         'expected':'bd'},
             {'object':'bat skeleton',       'expected':'ce'},
             {'object':'cat skeleton',       'expected':'pw'},     
             {'object':'human skeleton',       'expected':'mattress'},
             {'object':'book of spells',        'expected':'corner shelves'},
             {'object':'book of locks',        'expected':'mattress'},
             {'object':'bottle of water',      'expected':'dining table'},     
             {'object':'bottle of gatorade',      'expected':'desk'},
             {'object':'bottleopener','expected':'desk'},
             {'object':'carver chair',       'expected':'jl'},
             {'object':'rocking chair',       'expected':'sq'},     
             {'object':'chandelier',  'expected':'bh'},
             {'object':'cloak',       'expected':'armoire'},
             {'object':'desk',        'expected':'jl'},
             {'object':'stoneware',  'expected':'gateleg table'},     
             {'object':'fine china',  'expected':'dining table'},
             {'object':'earthenware',  'expected':'bh'},
             {'object':'lidless eye',         'expected':'ap'},
             {'object':'wall of flames',      'expected':'ap'},     
             {'object':'gem',         'expected':'safe'},
             {'object':'cooking hearth',      'expected':'kt'},
             {'object':'helmet',      'expected':'trestle table'},
             {'object':'golden key',         'expected':'cedar trunk'},     
             {'object':'key rung',     'expected':'jl'},
             {'object':'kitchen knife',       'expected':'kitchen table'},
             {'object':'broken lantern',     'expected':'high table'},
             {'object':'brass lantern',     'expected':'round table'},     
             {'object':'wooden lever',       'expected':'wooden shelves'},
             {'object':'iron lever',       'expected':'ct'},
             {'object':'lockpick',    'expected':'metal shelves'},
             {'object':'matches',     'expected':'kitchen table'},     
             {'object':'mattress',    'expected':'cl'},
             {'object':'mushrooms',   'expected':'metal shelves'},
             {'object':'note',        'expected':'portrait'},
             {'object':'portrait',    'expected':'ca'},     
             {'object':'painting',    'expected':'hw'},
             {'object':'magical ring',        'expected':'altar'},
             {'object':'shale rocks',       'expected':'ce'},
             {'object':'slate rocks',       'expected':'pw'},     
             {'object':'turkish rug',         'expected':'sr'},
             {'object':'wool rug',         'expected':'hw'},   
             {'object':'slate of runes',       'expected':'wl'},
             {'object':'safe',        'expected':'bd'},     
             {'object':'scroll',      'expected':'desk'},
             {'object':'metal shelves',       'expected':'sr'},
             {'object':'corner shelves',       'expected':'wl'},
             {'object':'wooden shelves',       'expected':'bd'},     
             {'object':'sign',        'expected':'ot'},
             {'object':'bar stool',       'expected':'ca'},  
             {'object':'milking stool',       'expected':'cl'},
             {'object':'machete',       'expected':'ce'},     
             {'object':'sabre',       'expected':'trestle table'},
             {'object':'gateleg table',       'expected':'ca'},
             {'object':'kitchen table',       'expected':'kt'},
             {'object':'dining table',       'expected':'bh'},     
             {'object':'high table',       'expected':'wl'},
             {'object':'round table',       'expected':'sq'},
             {'object':'trestle table',       'expected':'ar'},
             {'object':'tapestries',  'expected':'tr'},     
             {'object':'tools',       'expected':'pw'},
             {'object':'trapdoor',    'expected':'turkish rug'},
             {'object':'treasure',    'expected':'iron trunk'},
             {'object':'tree',        'expected':'ot'},     
             {'object':'iron trunk',       'expected':'tr'},
             {'object':'cedar trunk',       'expected':'bd'},
             {'object':'warhammer',   'expected':'trestle table'} ]
 
    def test_ObjectLocation(self):
        for i in self.data:
            self.assertEqual(dm.getObjectLocation(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectKeyObject(unittest.TestCase):
    print("ObjectKeyObject")
    data = [ {'object':'altar',       'expected':''}, 
             {'object':'green apple',       'expected':''},
             {'object':'red apple',       'expected':''},
             {'object':'armoire',     'expected':''},
             {'object':'armor',       'expected':''},
             {'object':'axe',         'expected':''},
             {'object':'bearskin',    'expected':''},
             {'object':'bunk bed',         'expected':''},
             {'object':'twin bed',         'expected':''},
             {'object':'bat skeleton',       'expected':''},
             {'object':'cat skeleton',       'expected':''},     
             {'object':'human skeleton',       'expected':''},
             {'object':'book of spells',        'expected':''},
             {'object':'book of locks',        'expected':''},
             {'object':'bottle of water',      'expected':'bottleopener'},     
             {'object':'bottle of gatorade',      'expected':'bottleopener'},
             {'object':'bottleopener','expected':''},
             {'object':'carver chair',       'expected':''},
             {'object':'rocking chair',       'expected':''},     
             {'object':'chandelier',  'expected':''},
             {'object':'cloak',       'expected':''},
             {'object':'desk',        'expected':''},
             {'object':'stoneware',  'expected':''},     
             {'object':'fine china',  'expected':''},
             {'object':'earthenware',  'expected':''},
             {'object':'lidless eye',         'expected':''},
             {'object':'wall of flames',      'expected':''},     
             {'object':'gem',         'expected':''},
             {'object':'cooking hearth',      'expected':''},
             {'object':'helmet',      'expected':''},
             {'object':'golden key',         'expected':''},     
             {'object':'key rung',     'expected':''},
             {'object':'kitchen knife',       'expected':''},
             {'object':'broken lantern',     'expected':'matches'},
             {'object':'brass lantern',     'expected':'matches'},     
             {'object':'wooden lever',       'expected':'ct'},
             {'object':'iron lever',       'expected':'bd'},
             {'object':'lockpick',    'expected':''},
             {'object':'matches',     'expected':''},     
             {'object':'mattress',    'expected':''},
             {'object':'mushrooms',   'expected':''},
             {'object':'note',        'expected':''},
             {'object':'portrait',    'expected':''},     
             {'object':'painting',    'expected':''},
             {'object':'magical ring',        'expected':''},
             {'object':'shale rocks',       'expected':''},
             {'object':'slate rocks',       'expected':''},     
             {'object':'turkish rug',         'expected':''},
             {'object':'wool rug',         'expected':''},   
             {'object':'slate of runes',       'expected':''},
             {'object':'safe',        'expected':'lock'},     
             {'object':'scroll',      'expected':''},
             {'object':'metal shelves',       'expected':''},
             {'object':'corner shelves',       'expected':''},
             {'object':'wooden shelves',       'expected':''},     
             {'object':'sign',        'expected':''},
             {'object':'bar stool',       'expected':''},  
             {'object':'milking stool',       'expected':''},
             {'object':'machete',       'expected':''},     
             {'object':'sabre',       'expected':''},
             {'object':'gateleg table',       'expected':''},
             {'object':'kitchen table',       'expected':''},
             {'object':'dining table',       'expected':''},     
             {'object':'high table',       'expected':''},
             {'object':'round table',       'expected':''},
             {'object':'trestle table',       'expected':''},
             {'object':'tapestries',  'expected':''},     
             {'object':'tools',       'expected':''},
             {'object':'trapdoor',    'expected':'tr'},
             {'object':'treasure',    'expected':''},
             {'object':'tree',        'expected':''},     
             {'object':'iron trunk',       'expected':'lockpick'},
             {'object':'cedar trunk',       'expected':''},
             {'object':'warhammer',   'expected':''} ]
 
    def test_ObjectKeyObject(self):
        for i in self.data:
            self.assertEqual(dm.getObjectKeyObject(i['object']),  i['expected'],  "Failed: " + i['object'])
 
class ObjectHealthPoints(unittest.TestCase):
    print("ObjectHealthPoints")
    data = [ {'object':'altar',       'expected':-30}, 
             {'object':'green apple',       'expected':15},
             {'object':'red apple',       'expected':15},
             {'object':'armoire',     'expected':0},
             {'object':'armor',       'expected':0},
             {'object':'axe',         'expected':0},
             {'object':'bearskin',    'expected':2},
             {'object':'bunk bed',         'expected':10},
             {'object':'twin bed',         'expected':20},
             {'object':'bat skeleton',       'expected':0},
             {'object':'cat skeleton',       'expected':0},     
             {'object':'human skeleton',       'expected':0},
             {'object':'book of spells',        'expected':0},
             {'object':'book of locks',        'expected':0},
             {'object':'bottle of water',      'expected':25},     
             {'object':'bottle of gatorade',      'expected':35},
             {'object':'bottleopener','expected':0},
             {'object':'carver chair',       'expected':5},
             {'object':'rocking chair',       'expected':5},     
             {'object':'chandelier',  'expected':0},
             {'object':'cloak',       'expected':0},
             {'object':'desk',        'expected':0},
             {'object':'stoneware',  'expected':0},     
             {'object':'fine china',  'expected':0},
             {'object':'earthenware',  'expected':0},
             {'object':'lidless eye',         'expected':0},
             {'object':'wall of flames',      'expected':0},     
             {'object':'gem',         'expected':0},
             {'object':'cooking hearth',      'expected':0},
             {'object':'helmet',      'expected':0},
             {'object':'golden key',         'expected':0},     
             {'object':'key rung',     'expected':0},
             {'object':'kitchen knife',       'expected':0},
             {'object':'broken lantern',     'expected':0},
             {'object':'brass lantern',     'expected':0},     
             {'object':'wooden lever',       'expected':0},
             {'object':'iron lever',       'expected':0},
             {'object':'lockpick',    'expected':0},
             {'object':'matches',     'expected':0},     
             {'object':'mattress',    'expected':-5},
             {'object':'mushrooms',   'expected':30},
             {'object':'note',        'expected':0},
             {'object':'portrait',    'expected':0},     
             {'object':'painting',    'expected':0},
             {'object':'magical ring',        'expected':0},
             {'object':'shale rocks',       'expected':0},
             {'object':'slate rocks',       'expected':0},     
             {'object':'turkish rug',         'expected':-5},
             {'object':'wool rug',         'expected':0},   
             {'object':'slate of runes',       'expected':0},
             {'object':'safe',        'expected':0},     
             {'object':'scroll',      'expected':0},
             {'object':'metal shelves',       'expected':0},
             {'object':'corner shelves',       'expected':0},
             {'object':'wooden shelves',       'expected':0},     
             {'object':'sign',        'expected':0},
             {'object':'bar stool',       'expected':2},  
             {'object':'milking stool',       'expected':2},
             {'object':'machete',       'expected':0},     
             {'object':'sabre',       'expected':0},
             {'object':'gateleg table',       'expected':0},
             {'object':'kitchen table',       'expected':0},
             {'object':'dining table',       'expected':0},     
             {'object':'high table',       'expected':0},
             {'object':'round table',       'expected':0},
             {'object':'trestle table',       'expected':0},
             {'object':'tapestries',  'expected':0},     
             {'object':'tools',       'expected':0},
             {'object':'trapdoor',    'expected':0},
             {'object':'treasure',    'expected':0},
             {'object':'tree',        'expected':0},     
             {'object':'iron trunk',       'expected':0},
             {'object':'cedar trunk',       'expected':0},
             {'object':'warhammer',   'expected':0} ]
 
    def test_ObjectHealthPoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectHealthPoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 
class ObjectDamagePoints(unittest.TestCase):
    print("ObjectDamagePoints")
    data = [ {'object':'altar',       'expected':0}, 
             {'object':'green apple',       'expected':0},
             {'object':'red apple',       'expected':0},
             {'object':'armoire',     'expected':0},
             {'object':'armor',       'expected':0},
             {'object':'axe',         'expected':25},
             {'object':'bearskin',    'expected':0},
             {'object':'bunk bed',         'expected':0},
             {'object':'twin bed',         'expected':0},
             {'object':'bat skeleton',       'expected':0},
             {'object':'cat skeleton',       'expected':0},     
             {'object':'human skeleton',       'expected':0},
             {'object':'book of spells',        'expected':0},
             {'object':'book of locks',        'expected':0},
             {'object':'bottle of water',      'expected':0},     
             {'object':'bottle of gatorade',      'expected':0},
             {'object':'bottleopener','expected':0},
             {'object':'carver chair',       'expected':0},
             {'object':'rocking chair',       'expected':0},     
             {'object':'chandelier',  'expected':0},
             {'object':'cloak',       'expected':0},
             {'object':'desk',        'expected':0},
             {'object':'stoneware',  'expected':0},     
             {'object':'fine china',  'expected':0},
             {'object':'earthenware',  'expected':0},
             {'object':'lidless eye',         'expected':0},
             {'object':'wall of flames',      'expected':0},     
             {'object':'gem',         'expected':0},
             {'object':'cooking hearth',      'expected':0},
             {'object':'helmet',      'expected':0},
             {'object':'golden key',         'expected':0},     
             {'object':'key rung',     'expected':0},
             {'object':'kitchen knife',       'expected':10},
             {'object':'broken lantern',     'expected':0},
             {'object':'brass lantern',     'expected':0},     
             {'object':'wooden lever',       'expected':0},
             {'object':'iron lever',       'expected':0},
             {'object':'lockpick',    'expected':0},
             {'object':'matches',     'expected':0},     
             {'object':'mattress',    'expected':0},
             {'object':'mushrooms',   'expected':0},
             {'object':'note',        'expected':0},
             {'object':'portrait',    'expected':0},     
             {'object':'painting',    'expected':0},
             {'object':'magical ring',        'expected':0},
             {'object':'shale rocks',       'expected':0},
             {'object':'slate rocks',       'expected':0},     
             {'object':'turkish rug',         'expected':0},
             {'object':'wool rug',         'expected':0},   
             {'object':'slate of runes',       'expected':0},
             {'object':'safe',        'expected':0},     
             {'object':'scroll',      'expected':0},
             {'object':'metal shelves',       'expected':0},
             {'object':'corner shelves',       'expected':0},
             {'object':'wooden shelves',       'expected':0},     
             {'object':'sign',        'expected':0},
             {'object':'bar stool',       'expected':0},  
             {'object':'milking stool',       'expected':0},
             {'object':'machete',       'expected':15},     
             {'object':'sabre',       'expected':20},
             {'object':'gateleg table',       'expected':0},
             {'object':'kitchen table',       'expected':0},
             {'object':'dining table',       'expected':0},     
             {'object':'high table',       'expected':0},
             {'object':'round table',       'expected':0},
             {'object':'trestle table',       'expected':0},
             {'object':'tapestries',  'expected':0},     
             {'object':'tools',       'expected':0},
             {'object':'trapdoor',    'expected':0},
             {'object':'treasure',    'expected':0},
             {'object':'tree',        'expected':0},     
             {'object':'iron trunk',       'expected':0},
             {'object':'cedar trunk',       'expected':0},
             {'object':'warhammer',   'expected':30} ]
 
    def test_ObjectDamagePoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectDamagePoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectProtectionPoints(unittest.TestCase):
    print("ObjectProtectionPoints")
    data = [ {'object':'altar',       'expected':0}, 
             {'object':'green apple',       'expected':0},
             {'object':'red apple',       'expected':0},
             {'object':'armoire',     'expected':0},
             {'object':'armor',       'expected':20},
             {'object':'axe',         'expected':0},
             {'object':'bearskin',    'expected':0},
             {'object':'bunk bed',         'expected':0},
             {'object':'twin bed',         'expected':0},
             {'object':'bat skeleton',       'expected':0},
             {'object':'cat skeleton',       'expected':0},     
             {'object':'human skeleton',       'expected':0},
             {'object':'book of spells',        'expected':0},
             {'object':'book of locks',        'expected':0},
             {'object':'bottle of water',      'expected':0},     
             {'object':'bottle of gatorade',      'expected':0},
             {'object':'bottleopener','expected':0},
             {'object':'carver chair',       'expected':0},
             {'object':'rocking chair',       'expected':0},     
             {'object':'chandelier',  'expected':0},
             {'object':'cloak',       'expected':0},
             {'object':'desk',        'expected':0},
             {'object':'stoneware',  'expected':0},     
             {'object':'fine china',  'expected':0},
             {'object':'earthenware',  'expected':0},
             {'object':'lidless eye',         'expected':0},
             {'object':'wall of flames',      'expected':0},     
             {'object':'gem',         'expected':0},
             {'object':'cooking hearth',      'expected':0},
             {'object':'helmet',      'expected':5},
             {'object':'golden key',         'expected':0},     
             {'object':'key rung',     'expected':0},
             {'object':'kitchen knife',       'expected':0},
             {'object':'broken lantern',     'expected':0},
             {'object':'brass lantern',     'expected':0},     
             {'object':'wooden lever',       'expected':0},
             {'object':'iron lever',       'expected':0},
             {'object':'lockpick',    'expected':0},
             {'object':'matches',     'expected':0},     
             {'object':'mattress',    'expected':0},
             {'object':'mushrooms',   'expected':0},
             {'object':'note',        'expected':0},
             {'object':'portrait',    'expected':0},     
             {'object':'painting',    'expected':0},
             {'object':'magical ring',        'expected':0},
             {'object':'shale rocks',       'expected':0},
             {'object':'slate rocks',       'expected':0},     
             {'object':'turkish rug',         'expected':0},
             {'object':'wool rug',         'expected':0},   
             {'object':'slate of runes',       'expected':0},
             {'object':'safe',        'expected':0},     
             {'object':'scroll',      'expected':0},
             {'object':'metal shelves',       'expected':0},
             {'object':'corner shelves',       'expected':0},
             {'object':'wooden shelves',       'expected':0},     
             {'object':'sign',        'expected':0},
             {'object':'bar stool',       'expected':0},  
             {'object':'milking stool',       'expected':0},
             {'object':'machete',       'expected':0},     
             {'object':'sabre',       'expected':0},
             {'object':'gateleg table',       'expected':0},
             {'object':'kitchen table',       'expected':0},
             {'object':'dining table',       'expected':0},     
             {'object':'high table',       'expected':0},
             {'object':'round table',       'expected':0},
             {'object':'trestle table',       'expected':0},
             {'object':'tapestries',  'expected':0},     
             {'object':'tools',       'expected':0},
             {'object':'trapdoor',    'expected':0},
             {'object':'treasure',    'expected':0},
             {'object':'tree',        'expected':0},     
             {'object':'iron trunk',       'expected':0},
             {'object':'cedar trunk',       'expected':0},
             {'object':'warhammer',   'expected':0} ]
 
    def test_ObjectProtectionPoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectProtectionPoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectWeight(unittest.TestCase):
    print("ObjectWeight")
    data = [ {'object':'altar',       'expected':1000}, 
             {'object':'green apple',       'expected':5},
             {'object':'red apple',       'expected':5},
             {'object':'armoire',     'expected':500},
             {'object':'armor',       'expected':80},
             {'object':'axe',         'expected':20},
             {'object':'bearskin',    'expected':100},
             {'object':'bunk bed',         'expected':200},
             {'object':'twin bed',         'expected':250},
             {'object':'bat skeleton',       'expected':20},
             {'object':'cat skeleton',       'expected':20},     
             {'object':'human skeleton',       'expected':25},
             {'object':'book of spells',        'expected':5},
             {'object':'book of locks',        'expected':5},
             {'object':'bottle of water',      'expected':5},     
             {'object':'bottle of gatorade',      'expected':5},
             {'object':'bottleopener','expected':1},
             {'object':'carver chair',       'expected':50},
             {'object':'rocking chair',       'expected':50},     
             {'object':'chandelier',  'expected':200},
             {'object':'cloak',       'expected':5},
             {'object':'desk',        'expected':200},
             {'object':'stoneware',  'expected':50},     
             {'object':'fine china',  'expected':50},
             {'object':'earthenware',  'expected':25},
             {'object':'lidless eye',         'expected':0},
             {'object':'wall of flames',      'expected':0},     
             {'object':'gem',         'expected':1},
             {'object':'cooking hearth',      'expected':500},
             {'object':'helmet',      'expected':30},
             {'object':'golden key',         'expected':1},     
             {'object':'key rung',     'expected':100},
             {'object':'kitchen knife',       'expected':10},
             {'object':'broken lantern',     'expected':15},
             {'object':'brass lantern',     'expected':15},     
             {'object':'wooden lever',       'expected':5},
             {'object':'iron lever',       'expected':5},
             {'object':'lockpick',    'expected':1},
             {'object':'matches',     'expected':1},     
             {'object':'mattress',    'expected':100},
             {'object':'mushrooms',   'expected':5},
             {'object':'note',        'expected':1},
             {'object':'portrait',    'expected':20},     
             {'object':'painting',    'expected':20},
             {'object':'magical ring',        'expected':1},
             {'object':'shale rocks',       'expected':60},
             {'object':'slate rocks',       'expected':70},     
             {'object':'turkish rug',         'expected':100},
             {'object':'wool rug',         'expected':100},   
             {'object':'slate of runes',       'expected':1000},
             {'object':'safe',        'expected':1000},     
             {'object':'scroll',      'expected':5},
             {'object':'metal shelves',       'expected':200},
             {'object':'corner shelves',       'expected':200},
             {'object':'wooden shelves',       'expected':200},     
             {'object':'sign',        'expected':15},
             {'object':'bar stool',       'expected':10},  
             {'object':'milking stool',       'expected':10},
             {'object':'machete',       'expected':25},     
             {'object':'sabre',       'expected':30},
             {'object':'gateleg table',       'expected':300},
             {'object':'kitchen table',       'expected':300},
             {'object':'dining table',       'expected':300},     
             {'object':'high table',       'expected':300},
             {'object':'round table',       'expected':300},
             {'object':'trestle table',       'expected':300},
             {'object':'tapestries',  'expected':30},     
             {'object':'tools',       'expected':50},
             {'object':'trapdoor',    'expected':10},
             {'object':'treasure',    'expected':100},
             {'object':'tree',        'expected':1000},     
             {'object':'iron trunk',       'expected':50},
             {'object':'cedar trunk',       'expected':50},
             {'object':'warhammer',   'expected':50} ]
 
    def test_ObjectWeight(self):
        for i in self.data:
            self.assertEqual(dm.getObjectWeight(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class GhostVisible(unittest.TestCase):
    print("GhostVisible")
    data = [ {'ghost':'blinky',        'expected':False}, 
             {'ghost':'clyde',         'expected':False},
             {'ghost':'inky',          'expected':False},
             {'ghost':'pinky',         'expected':False} ]

    def test_GhostVisible(self):
        for i in self.data:
            self.assertEqual(dm.isGhostVisible(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
class GhostLocation(unittest.TestCase):
    print("GhostLocation")
    data = [ {'ghost':'blinky',        'expected':'pw'}, 
             {'ghost':'clyde',         'expected':'bh'},
             {'ghost':'inky',          'expected':'ct'},
             {'ghost':'pinky',         'expected':'sq'} ]

    def test_GhostLocation(self):
        for i in self.data:
            self.assertEqual(dm.getGhostLocation(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
class GhostHealth(unittest.TestCase):
    print("GhostHealth")
    data = [ {'ghost':'blinky',        'expected':100}, 
             {'ghost':'clyde',         'expected':80},
             {'ghost':'inky',          'expected':60},
             {'ghost':'pinky',         'expected':40} ]

    def test_GhostHealth(self):
        for i in self.data:
            self.assertEqual(dm.getGhostHealth(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
 
class GhostDamagePoints(unittest.TestCase):
    print("GhostDamagePoints")
    data = [ {'ghost':'blinky',        'expected':20}, 
             {'ghost':'clyde',         'expected':15},
             {'ghost':'inky',          'expected':10},
             {'ghost':'pinky',         'expected':5} ]

    def test_GhostDamagePoints(self):
        for i in self.data:
            self.assertEqual(dm.getGhostDamagePoints(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 

class PlayerAndInventory(unittest.TestCase):
    print("PlayerAndInventory")
    def test_PlayerAndInventory(self):
        self.assertEqual(dm.getPlayerHealth(), 100, "Failed player health")
        self.assertTrue(dm.isPlayerVisible(),  "Failed player visible")
        self.assertEqual(dm.getPlayerLocation(), 'ce', "Failed player location")
        self.assertEqual(dm.getInventoryCapacity(), 200, "Failed inventory capacity")
        self.assertItemsEqual(dm.getInventoryObjects(), [], "Failed inventory objects")



         
    
if __name__ == '__main__':
	unittest.main()
