from DMT.GameData import DataManager
import unittest

dm = DataManager()
dm.loadNewGame()


class RoomObjects(unittest.TestCase):
    print("RoomObjects")
    data = [ {'room':'ap','expected':['eye1','flames1']}, 
             {'room':'ar','expected':['sword2','armor1','warhammer1','helmet1', 'table6']},
             {'room':'bd','expected':['bed2','trunk2','safe1','shelf3','gem1','lever1','key1']},
             {'room':'bh','expected':['dinnerware2','chandelier1','table3','dinnerware3','bottle1']},
             {'room':'ca','expected':['dinnerware1','stool1','table1','painting1','note1']},
             {'room':'ce','expected':['bones1','sword1','rocks1']},              
             {'room':'cl','expected':['bones3','mattress1','book2','stool2']},
             {'room':'ct','expected':['armoire1','cloak1','lever2']},
             {'room':'hw','expected':['rug2','painting2']}, 
             {'room':'jl','expected':['chair1','scroll1','desk1','keyrung1','bottle2','bottleopener1']},
             {'room':'kt','expected':['matches1','hearth1','apple1','knife1','table2']},               
             {'room':'ot','expected':['sign1','tree1']},
             {'room':'pw','expected':['bones2','tools1','rocks2']},
             {'room':'sq','expected':['bed1','table5','chair2','lantern2','bearskin1','apple2']},
             {'room':'sr','expected':['lockpick1','mushrooms1','rug1','shelf1','trapdoor1']},
             {'room':'tr','expected':['treasure1','trunk1','tapestries1','altar1','ring1']},
             {'room':'wl','expected':['shelf2','book1','axe1','runes1','table4','lantern1']} ] 
             
    def test_RoomObjects(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            self.assertItemsEqual(dm.getRoomObjects(), i['expected'],   "Failed: " + i['room'])


class RoomExits(unittest.TestCase):
    print("RoomExits")
    data = [ {'room':'ap',   'expected':['ap1']}, 
             {'room':'ar',   'expected':['ar1','ar2','ar3']},
             {'room':'bd',   'expected':['bd1','bd2']},
             {'room':'bh',   'expected':['bh1','bh2']},
             {'room':'ca',   'expected':['ca1','ca2']},
             {'room':'ce',   'expected':['ce1','ce2']},              
             {'room':'cl',   'expected':['cl1']},
             {'room':'ct',   'expected':['ct1']},
             {'room':'hw',   'expected':['hw1','hw2','hw3']}, 
             {'room':'jl',   'expected':['jl1','jl2']},
             {'room':'kt',   'expected':['kt1','kt2','kt3']},               
             {'room':'ot',   'expected':['out']},
             {'room':'pw',   'expected':['pw1','pw2']},
             {'room':'sq',   'expected':['sq1','sq2']},
             {'room':'sr',   'expected':['sr1','sr2']},
             {'room':'tr',   'expected':['tr1']},
             {'room':'wl',   'expected':['wl1','wl2']} ] 
             
    def test_RoomExits(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            self.assertItemsEqual(dm.getRoomExits(), i['expected'],   "Failed: " + i['room'])


class RoomLighted(unittest.TestCase):
    print("RoomLighted")
    data = [ {'room':'ap',   'expected':True}, 
             {'room':'ar',   'expected':True},
             {'room':'bd',   'expected':False},
             {'room':'bh',   'expected':True},
             {'room':'ca',   'expected':True},
             {'room':'ce',   'expected':True},              
             {'room':'cl',   'expected':False},
             {'room':'ct',   'expected':False},
             {'room':'hw',   'expected':True}, 
             {'room':'jl',   'expected':False},
             {'room':'kt',   'expected':True},               
             {'room':'ot',   'expected':True},
             {'room':'pw',   'expected':False},
             {'room':'sq',   'expected':True},
             {'room':'sr',   'expected':False},
             {'room':'tr',   'expected':False},
             {'room':'wl',   'expected':False} ] 
             
    def test_RoomLighted(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            if i['expected']:
                self.assertTrue(dm.isRoomLighted(), "Failed: " + i['room'])
            else:
                self.assertFalse(dm.isRoomLighted(), "Failed: " + i['room'])
 
 
class RoomDiscovered(unittest.TestCase):
    print("RoomDiscoverd")
    data = [ {'room':'ap',   'expected':False}, 
             {'room':'ar',   'expected':False},
             {'room':'bd',   'expected':False},
             {'room':'bh',   'expected':False},
             {'room':'ca',   'expected':False},
             {'room':'ce',   'expected':True},              
             {'room':'cl',   'expected':False},
             {'room':'ct',   'expected':False},
             {'room':'hw',   'expected':False}, 
             {'room':'jl',   'expected':False},
             {'room':'kt',   'expected':False},               
             {'room':'ot',   'expected':False},
             {'room':'pw',   'expected':False},
             {'room':'sq',   'expected':False},
             {'room':'sr',   'expected':False},
             {'room':'tr',   'expected':False},
             {'room':'wl',   'expected':False} ] 
             
    def test_RoomDiscovered(self):
        for i in self.data:
            dm.setPlayerLocation(i['room'])
            if i['expected']:
                self.assertTrue(dm.isRoomDiscovered(), "Failed: " + i['room'])
            else:
                self.assertFalse(dm.isRoomDiscovered(), "Failed: " + i['room'])
 


class ExitDirection(unittest.TestCase):
    print("ExitDirection")
    data = [ {'exit':'ap1',          'expected':'west'}, 
             {'exit':'ar1',          'expected':'north'},
             {'exit':'ar2',          'expected':'east'},
             {'exit':'ar3',          'expected':'south'},
             {'exit':'bd1',          'expected':'east'},
             {'exit':'bh1',          'expected':'north'},  
             {'exit':'bh2',          'expected':'east'},
             {'exit':'ca1',          'expected':'south'},
             {'exit':'ca2',          'expected':'east'},
             {'exit':'ce1',          'expected':'south'},
             {'exit':'ce2',          'expected':'north'},                 
             {'exit':'cl1',          'expected':'west'},
             {'exit':'hw1',          'expected':'west'},
             {'exit':'hw2',          'expected':'east'},
             {'exit':'hw3',          'expected':'south'},   
             {'exit':'jl1',          'expected':'west'},
             {'exit':'jl2',          'expected':'east'},
             {'exit':'kt1',          'expected':'west'},
             {'exit':'kt2',          'expected':'east'},
             {'exit':'kt3',          'expected':'south'},               
             {'exit':'out',          'expected':'north'},
             {'exit':'pw1',          'expected':'south'},
             {'exit':'pw2',          'expected':'north'},
             {'exit':'sq1',          'expected':'north'},
             {'exit':'sq2',          'expected':'west'},   
             {'exit':'sr1',          'expected':'west'},
             {'exit':'tr1',          'expected':'west'},
             {'exit':'wl1',          'expected':'west'},
             {'exit':'wl2',          'expected':'east'} ] 
             
    def test_ExitDirection(self):
        for i in self.data:
            self.assertEqual(dm.getExitDirection(i['exit']),  i['expected'],  "Failed: " + i['exit'])


class ExitToRoom(unittest.TestCase):
    print("ExitToRoom")
    data = [ {'exit':'ap1',          'expected':'wl'}, 
             {'exit':'ar1',          'expected':'hw'},
             {'exit':'ar2',          'expected':'jl'},
             {'exit':'ar3',          'expected':'sq'},
             {'exit':'bd1',          'expected':'sq'},
             {'exit':'bh1',          'expected':'kt'},  
             {'exit':'bh2',          'expected':'hw'},
             {'exit':'ca1',          'expected':'pw'},
             {'exit':'ca2',          'expected':'kt'},
             {'exit':'ce1',          'expected':'ot'},
             {'exit':'ce2',          'expected':'pw'},                 
             {'exit':'cl1',          'expected':'jl'},
             {'exit':'hw1',          'expected':'bh'},
             {'exit':'hw2',          'expected':'wl'},
             {'exit':'hw3',          'expected':'ar'},   
             {'exit':'jl1',          'expected':'ar'},
             {'exit':'jl2',          'expected':'cl'},
             {'exit':'kt1',          'expected':'ca'},
             {'exit':'kt2',          'expected':'sr'},
             {'exit':'kt3',          'expected':'bh'},               
             {'exit':'out',          'expected':'ce'},
             {'exit':'pw1',          'expected':'ce'},
             {'exit':'pw2',          'expected':'ca'},
             {'exit':'sq1',          'expected':'ar'},
             {'exit':'sq2',          'expected':'bd'},   
             {'exit':'sr1',          'expected':'kt'},
             {'exit':'tr1',          'expected':'sr'},
             {'exit':'wl1',          'expected':'hw'},
             {'exit':'wl2',          'expected':'ap'} ] 
             
    def test_ExitToRoom(self):
        for i in self.data:
            self.assertEqual(dm.getExitToRoom(i['exit']),  i['expected'],  "Failed: " + i['exit'])
 

class ExitKeyObject(unittest.TestCase):
    print("ExitKeyObject")
    data = [ {'exit':'ap1',          'expected':''}, 
             {'exit':'ar1',          'expected':''},
             {'exit':'ar2',          'expected':''},
             {'exit':'ar3',          'expected':''},
             {'exit':'bd1',          'expected':''},
             {'exit':'bh1',          'expected':''},  
             {'exit':'bh2',          'expected':''},
             {'exit':'ca1',          'expected':''},
             {'exit':'ca2',          'expected':''},
             {'exit':'ce1',          'expected':'key1'},
             {'exit':'ce2',          'expected':''},                 
             {'exit':'cl1',          'expected':''},
             {'exit':'hw1',          'expected':''},
             {'exit':'hw2',          'expected':''},
             {'exit':'hw3',          'expected':''},   
             {'exit':'jl1',          'expected':''},
             {'exit':'jl2',          'expected':''},
             {'exit':'kt1',          'expected':''},
             {'exit':'kt2',          'expected':''},
             {'exit':'kt3',          'expected':''},               
             {'exit':'out',          'expected':''},
             {'exit':'pw1',          'expected':''},
             {'exit':'pw2',          'expected':''},
             {'exit':'sq1',          'expected':''},
             {'exit':'sq2',          'expected':''},   
             {'exit':'sr1',          'expected':''},
             {'exit':'tr1',          'expected':''},
             {'exit':'wl1',          'expected':''},
             {'exit':'wl2',          'expected':''} ] 
             
    def test_ExitKeyObject(self):
        for i in self.data:
            self.assertEqual(dm.getExitKeyObject(i['exit']),  i['expected'],  "Failed: " + i['exit'])
 

class ExitVisible(unittest.TestCase):
    print("ExitVisible")
    data = [ {'exit':'ap1',          'expected':True}, 
             {'exit':'ar1',          'expected':True},
             {'exit':'ar2',          'expected':True},
             {'exit':'ar3',          'expected':True},
             {'exit':'bd1',          'expected':True},
             {'exit':'bh1',          'expected':True},  
             {'exit':'bh2',          'expected':True},
             {'exit':'ca1',          'expected':True},
             {'exit':'ca2',          'expected':True},
             {'exit':'ce1',          'expected':True},
             {'exit':'ce2',          'expected':True},                 
             {'exit':'cl1',          'expected':True},
             {'exit':'hw1',          'expected':True},
             {'exit':'hw2',          'expected':True},
             {'exit':'hw3',          'expected':True},   
             {'exit':'jl1',          'expected':True},
             {'exit':'jl2',          'expected':True},
             {'exit':'kt1',          'expected':True},
             {'exit':'kt2',          'expected':True},
             {'exit':'kt3',          'expected':True},               
             {'exit':'out',          'expected':True},
             {'exit':'pw1',          'expected':True},
             {'exit':'pw2',          'expected':True},
             {'exit':'sq1',          'expected':True},
             {'exit':'sq2',          'expected':True},   
             {'exit':'sr1',          'expected':True},
             {'exit':'tr1',          'expected':True},
             {'exit':'wl1',          'expected':True},
             {'exit':'wl2',          'expected':True} ] 
             
    def test_ExitVisible(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isExitVisible(i['exit']), "Failed: " + i['exit'])
            else:
                self.assertFalse(dm.isExitVisible(i['exit']), "Failed: " + i['exit'])
 
 
 
class ExitUnlocked(unittest.TestCase):
    print("ExitUnlocked")
    data = [ {'exit':'ap1',          'expected':True}, 
             {'exit':'ar1',          'expected':True},
             {'exit':'ar2',          'expected':True},
             {'exit':'ar3',          'expected':True},
             {'exit':'bd1',          'expected':True},
             {'exit':'bh1',          'expected':True},  
             {'exit':'bh2',          'expected':True},
             {'exit':'ca1',          'expected':True},
             {'exit':'ca2',          'expected':True},
             {'exit':'ce1',          'expected':False},
             {'exit':'ce2',          'expected':True},                 
             {'exit':'cl1',          'expected':True},
             {'exit':'hw1',          'expected':True},
             {'exit':'hw2',          'expected':True},
             {'exit':'hw3',          'expected':True},   
             {'exit':'jl1',          'expected':True},
             {'exit':'jl2',          'expected':True},
             {'exit':'kt1',          'expected':True},
             {'exit':'kt2',          'expected':True},
             {'exit':'kt3',          'expected':True},               
             {'exit':'out',          'expected':True},
             {'exit':'pw1',          'expected':True},
             {'exit':'pw2',          'expected':True},
             {'exit':'sq1',          'expected':True},
             {'exit':'sq2',          'expected':True},   
             {'exit':'sr1',          'expected':True},
             {'exit':'tr1',          'expected':True},
             {'exit':'wl1',          'expected':True},
             {'exit':'wl2',          'expected':True} ] 
             
    def test_ExitUnlocked(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isExitUnlocked(i['exit']), "Failed: " + i['exit'])
            else:
                self.assertFalse(dm.isExitUnlocked(i['exit']), "Failed: " + i['exit'])
   
                


class ObjectVisibility(unittest.TestCase):
    print("ObjectVisibile")
    data = [ {'object':'altar1',       'expected':True}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':True},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':True},
             {'object':'bed1',         'expected':True},
             {'object':'bed2',         'expected':True},
             {'object':'bones1',       'expected':True},
             {'object':'bones2',       'expected':True},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':True},
             {'object':'chair2',       'expected':True},     
             {'object':'chandelier1',  'expected':True},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':True},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':True},
             {'object':'eye1',         'expected':True},
             {'object':'flames1',      'expected':True},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':True},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':True},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':True},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':True},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':True},     
             {'object':'painting2',    'expected':True},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':True},
             {'object':'rocks2',       'expected':True},     
             {'object':'rug1',         'expected':True},
             {'object':'rug2',         'expected':True},   
             {'object':'runes1',       'expected':True},
             {'object':'safe1',        'expected':True},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':True},
             {'object':'shelf2',       'expected':True},
             {'object':'shelf3',       'expected':True},     
             {'object':'sign1',        'expected':True},
             {'object':'stool1',       'expected':True},  
             {'object':'stool2',       'expected':True},
             {'object':'sword1',       'expected':True},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':True},
             {'object':'table2',       'expected':True},
             {'object':'table3',       'expected':True},     
             {'object':'table4',       'expected':True},
             {'object':'table5',       'expected':True},
             {'object':'table6',       'expected':True},
             {'object':'tapestries1',  'expected':True},     
             {'object':'tools1',       'expected':True},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':True},     
             {'object':'trunk1',       'expected':True},
             {'object':'trunk2',       'expected':True},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectVisibility(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectVisible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectVisible(i['object']), "Failed: " + i['object'])
                
   
class ObjectAcquirable(unittest.TestCase):
    print("ObjectAcquireable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':True},
             {'object':'apple2',       'expected':True},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':True},
             {'object':'axe1',         'expected':True},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':True},
             {'object':'book2',        'expected':True},
             {'object':'bottle1',      'expected':True},     
             {'object':'bottle2',      'expected':True},
             {'object':'bottleopener1','expected':True},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':True},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':True},     
             {'object':'dinnerware2',  'expected':True},
             {'object':'dinnerware3',  'expected':True},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':True},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':True},
             {'object':'key1',         'expected':True},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':True},
             {'object':'lantern1',     'expected':True},
             {'object':'lantern2',     'expected':True},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':True},
             {'object':'matches1',     'expected':True},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':True},
             {'object':'note1',        'expected':True},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':True},
             {'object':'rocks1',       'expected':True},
             {'object':'rocks2',       'expected':True},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':True},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':True},     
             {'object':'sword2',       'expected':True},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':True},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':True} ]
 
    def test_ObjectAcquirable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectAcquirable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectAcquirable(i['object']), "Failed: " + i['object'])
                
      
   
class ObjectDrinkable(unittest.TestCase):
    print("ObjectDrinkable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':True},     
             {'object':'bottle2',      'expected':True},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectDrinkable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectDrinkable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectDrinkable(i['object']), "Failed: " + i['object'])
    
    
                
      
class ObjectEdible(unittest.TestCase):
    print("ObjectEdible")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':True},
             {'object':'apple2',       'expected':True},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':True},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectEdible(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEdible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEdible(i['object']), "Failed: " + i['object'])      
   

      
class ObjectEquippable(unittest.TestCase):
    print("ObjectEquippable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':True},
             {'object':'axe1',         'expected':True},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':True},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':True},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':True},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':True},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':True},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':True},     
             {'object':'sword2',       'expected':True},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':True} ]
 
    def test_ObjectEquippable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEquippable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEquippable(i['object']), "Failed: " + i['object'])      
   
  

      
class ObjectLayable(unittest.TestCase):
    print("ObjectLayable")
    data = [ {'object':'altar1',       'expected':True}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':True},
             {'object':'bed1',         'expected':True},
             {'object':'bed2',         'expected':True},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':True},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':True},
             {'object':'rug2',         'expected':True},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLayable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLayable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLayable(i['object']), "Failed: " + i['object'])      
   

class ObjectLightable(unittest.TestCase):
    print("ObjectLightable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':True},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':True},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':True},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLightable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLightable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLightable(i['object']), "Failed: " + i['object'])      
   


class ObjectLockable(unittest.TestCase):
    print("ObjectEdible")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':True},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':True},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLockable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLockable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLockable(i['object']), "Failed: " + i['object'])      
   


class ObjectPullable(unittest.TestCase):
    print("ObjectPullable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':True},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':True},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectPullable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPullable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPullable(i['object']), "Failed: " + i['object'])      
   

class ObjectPushable(unittest.TestCase):
    print("ObjectPushable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':True},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectPushable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPushable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPushable(i['object']), "Failed: " + i['object'])      
   

class ObjectReadable(unittest.TestCase):
    print("ObjectReadable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':True},
             {'object':'book2',        'expected':True},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':True},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':True},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':True},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':True},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectReadable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectReadable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectReadable(i['object']), "Failed: " + i['object'])      
   

class ObjectSitble(unittest.TestCase):
    print("ObjectSitble")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':True},
             {'object':'bed2',         'expected':True},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':True},
             {'object':'chair2',       'expected':True},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':True},  
             {'object':'stool2',       'expected':True},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectSitble(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectSitable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectSitable(i['object']), "Failed: " + i['object'])      
      

class ObjectWieldable(unittest.TestCase):
    print("ObjectWieldable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':True},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':True},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':True},     
             {'object':'sword2',       'expected':True},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':True} ]
 
    def test_ObjectWieldable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectWieldable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectWieldable(i['object']), "Failed: " + i['object'])      
 


class ObjectLookInside(unittest.TestCase):
    print("ObjectLookInside")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':True},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':True},
             {'object':'desk1',        'expected':True},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':True},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':True},     
             {'object':'scroll1',      'expected':True},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':True},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':True},
             {'object':'trunk2',       'expected':True},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLookInside(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookInsidePossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookInsidePossible(i['object']), "Failed: " + i['object']) 


class ObjectLookOn(unittest.TestCase):
    print("ObjectLookOn")
    data = [ {'object':'altar1',       'expected':True}, 
             {'object':'apple1',       'expected':True},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':True},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':True},
             {'object':'book1',        'expected':True},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':True},     
             {'object':'bottle2',      'expected':True},
             {'object':'bottleopener1','expected':True},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':True},
             {'object':'dinnerware1',  'expected':True},     
             {'object':'dinnerware2',  'expected':True},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':True},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':True},
             {'object':'lantern1',     'expected':True},
             {'object':'lantern2',     'expected':True},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':True},
             {'object':'matches1',     'expected':True},     
             {'object':'mattress1',    'expected':True},
             {'object':'mushrooms1',   'expected':True},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':True},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':True},
             {'object':'shelf2',       'expected':True},
             {'object':'shelf3',       'expected':True},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':True},
             {'object':'table1',       'expected':True},
             {'object':'table2',       'expected':True},
             {'object':'table3',       'expected':True},     
             {'object':'table4',       'expected':True},
             {'object':'table5',       'expected':True},
             {'object':'table6',       'expected':True},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':True} ]
 
    def test_ObjectLookOn(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookOnPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookOnPossible(i['object']), "Failed: " + i['object']) 

  
class ObjectLookAbove(unittest.TestCase):
    print("ObjectLookAbove")
    data = [ {'object':'altar1',       'expected':True}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':True},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLookAbove(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookAbovePossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookAbovePossible(i['object']), "Failed: " + i['object']) 
 
class ObjectLookUnder(unittest.TestCase):
    print("ObjectLookUnder")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':True},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':True},
             {'object':'bed1',         'expected':True},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':True},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':True},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':True},
             {'object':'rug2',         'expected':True},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':True},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLookUnder(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookUnderPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookUnderPossible(i['object']), "Failed: " + i['object']) 
 
 
class ObjectLookBehind(unittest.TestCase):
    print("ObjectLookBehind")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':True},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':True},
             {'object':'painting1',    'expected':True},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':True},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLookBehind(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isLookBehindPossible(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isLookBehindPossible(i['object']), "Failed: " + i['object']) 
 
class ObjectUnlocked(unittest.TestCase):
    print("ObjectUnlocked")
    data = [ {'object':'altar1',       'expected':True}, 
             {'object':'apple1',       'expected':True},
             {'object':'apple2',       'expected':True},
             {'object':'armoire1',     'expected':True},
             {'object':'armor1',       'expected':True},
             {'object':'axe1',         'expected':True},
             {'object':'bearskin1',    'expected':True},
             {'object':'bed1',         'expected':True},
             {'object':'bed2',         'expected':True},
             {'object':'bones1',       'expected':True},
             {'object':'bones2',       'expected':True},     
             {'object':'bones3',       'expected':True},
             {'object':'book1',        'expected':True},
             {'object':'book2',        'expected':True},
             {'object':'bottle1',      'expected':True},     
             {'object':'bottle2',      'expected':True},
             {'object':'bottleopener1','expected':True},
             {'object':'chair1',       'expected':True},
             {'object':'chair2',       'expected':True},     
             {'object':'chandelier1',  'expected':True},
             {'object':'cloak1',       'expected':True},
             {'object':'desk1',        'expected':True},
             {'object':'dinnerware1',  'expected':True},     
             {'object':'dinnerware2',  'expected':True},
             {'object':'dinnerware3',  'expected':True},
             {'object':'eye1',         'expected':True},
             {'object':'flames1',      'expected':True},     
             {'object':'gem1',         'expected':True},
             {'object':'hearth1',      'expected':True},
             {'object':'helmet1',      'expected':True},
             {'object':'key1',         'expected':True},     
             {'object':'keyrung1',     'expected':True},
             {'object':'knife1',       'expected':True},
             {'object':'lantern1',     'expected':True},
             {'object':'lantern2',     'expected':True},     
             {'object':'lever1',       'expected':True},
             {'object':'lever2',       'expected':True},
             {'object':'lockpick1',    'expected':True},
             {'object':'matches1',     'expected':True},     
             {'object':'mattress1',    'expected':True},
             {'object':'mushrooms1',   'expected':True},
             {'object':'note1',        'expected':True},
             {'object':'painting1',    'expected':True},     
             {'object':'painting2',    'expected':True},
             {'object':'ring1',        'expected':True},
             {'object':'rocks1',       'expected':True},
             {'object':'rocks2',       'expected':True},     
             {'object':'rug1',         'expected':True},
             {'object':'rug2',         'expected':True},   
             {'object':'runes1',       'expected':True},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':True},
             {'object':'shelf1',       'expected':True},
             {'object':'shelf2',       'expected':True},
             {'object':'shelf3',       'expected':True},     
             {'object':'sign1',        'expected':True},
             {'object':'stool1',       'expected':True},  
             {'object':'stool2',       'expected':True},
             {'object':'sword1',       'expected':True},     
             {'object':'sword2',       'expected':True},
             {'object':'table1',       'expected':True},
             {'object':'table2',       'expected':True},
             {'object':'table3',       'expected':True},     
             {'object':'table4',       'expected':True},
             {'object':'table5',       'expected':True},
             {'object':'table6',       'expected':True},
             {'object':'tapestries1',  'expected':True},     
             {'object':'tools1',       'expected':True},
             {'object':'trapdoor1',    'expected':True},
             {'object':'treasure1',    'expected':True},
             {'object':'tree1',        'expected':True},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':True},
             {'object':'warhammer1',   'expected':True} ]
 
    def test_ObjectUnlocked(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectUnlocked(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectUnlocked(i['object']), "Failed: " + i['object']) 
 
       

class ObjectLighted(unittest.TestCase):
    print("ObjectLighted")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectLighted(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectLighted(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectLighted(i['object']), "Failed: " + i['object']) 
 

class ObjectEquipped(unittest.TestCase):
    print("ObjectEquipped")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectEquipped(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectEquipped(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectEquipped(i['object']), "Failed: " + i['object']) 
 

class ObjectRead(unittest.TestCase):
    print("ObjectRead")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectRead(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectRead(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectRead(i['object']), "Failed: " + i['object']) 
 
class ObjectUseable(unittest.TestCase):
    print("ObjectUseable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectUseable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectUseable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectUseable(i['object']), "Failed: " + i['object']) 
 
class ObjectOpenable(unittest.TestCase):
    print("ObjectOpenable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectOpenable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectOpenable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectOpenable(i['object']), "Failed: " + i['object']) 
 

class ObjectPickable(unittest.TestCase):
    print("ObjectPickable")
    data = [ {'object':'altar1',       'expected':False}, 
             {'object':'apple1',       'expected':False},
             {'object':'apple2',       'expected':False},
             {'object':'armoire1',     'expected':False},
             {'object':'armor1',       'expected':False},
             {'object':'axe1',         'expected':False},
             {'object':'bearskin1',    'expected':False},
             {'object':'bed1',         'expected':False},
             {'object':'bed2',         'expected':False},
             {'object':'bones1',       'expected':False},
             {'object':'bones2',       'expected':False},     
             {'object':'bones3',       'expected':False},
             {'object':'book1',        'expected':False},
             {'object':'book2',        'expected':False},
             {'object':'bottle1',      'expected':False},     
             {'object':'bottle2',      'expected':False},
             {'object':'bottleopener1','expected':False},
             {'object':'chair1',       'expected':False},
             {'object':'chair2',       'expected':False},     
             {'object':'chandelier1',  'expected':False},
             {'object':'cloak1',       'expected':False},
             {'object':'desk1',        'expected':False},
             {'object':'dinnerware1',  'expected':False},     
             {'object':'dinnerware2',  'expected':False},
             {'object':'dinnerware3',  'expected':False},
             {'object':'eye1',         'expected':False},
             {'object':'flames1',      'expected':False},     
             {'object':'gem1',         'expected':False},
             {'object':'hearth1',      'expected':False},
             {'object':'helmet1',      'expected':False},
             {'object':'key1',         'expected':False},     
             {'object':'keyrung1',     'expected':False},
             {'object':'knife1',       'expected':False},
             {'object':'lantern1',     'expected':False},
             {'object':'lantern2',     'expected':False},     
             {'object':'lever1',       'expected':False},
             {'object':'lever2',       'expected':False},
             {'object':'lockpick1',    'expected':False},
             {'object':'matches1',     'expected':False},     
             {'object':'mattress1',    'expected':False},
             {'object':'mushrooms1',   'expected':False},
             {'object':'note1',        'expected':False},
             {'object':'painting1',    'expected':False},     
             {'object':'painting2',    'expected':False},
             {'object':'ring1',        'expected':False},
             {'object':'rocks1',       'expected':False},
             {'object':'rocks2',       'expected':False},     
             {'object':'rug1',         'expected':False},
             {'object':'rug2',         'expected':False},   
             {'object':'runes1',       'expected':False},
             {'object':'safe1',        'expected':False},     
             {'object':'scroll1',      'expected':False},
             {'object':'shelf1',       'expected':False},
             {'object':'shelf2',       'expected':False},
             {'object':'shelf3',       'expected':False},     
             {'object':'sign1',        'expected':False},
             {'object':'stool1',       'expected':False},  
             {'object':'stool2',       'expected':False},
             {'object':'sword1',       'expected':False},     
             {'object':'sword2',       'expected':False},
             {'object':'table1',       'expected':False},
             {'object':'table2',       'expected':False},
             {'object':'table3',       'expected':False},     
             {'object':'table4',       'expected':False},
             {'object':'table5',       'expected':False},
             {'object':'table6',       'expected':False},
             {'object':'tapestries1',  'expected':False},     
             {'object':'tools1',       'expected':False},
             {'object':'trapdoor1',    'expected':False},
             {'object':'treasure1',    'expected':False},
             {'object':'tree1',        'expected':False},     
             {'object':'trunk1',       'expected':False},
             {'object':'trunk2',       'expected':False},
             {'object':'warhammer1',   'expected':False} ]
 
    def test_ObjectPickable(self):
        for i in self.data:
            if i['expected']:
                self.assertTrue(dm.isObjectPickable(i['object']), "Failed: " + i['object'])
            else:
                self.assertFalse(dm.isObjectPickable(i['object']), "Failed: " + i['object']) 
 
class ObjectLocation(unittest.TestCase):
    print("ObjectLocation")
    data = [ {'object':'altar1',       'expected':'tr'}, 
             {'object':'apple1',       'expected':'table2'},
             {'object':'apple2',       'expected':'bed1'},
             {'object':'armoire1',     'expected':'ct'},
             {'object':'armor1',       'expected':'table6'},
             {'object':'axe1',         'expected':'altar1'},
             {'object':'bearskin1',    'expected':'sq'},
             {'object':'bed1',         'expected':'sq'},
             {'object':'bed2',         'expected':'bd'},
             {'object':'bones1',       'expected':'ce'},
             {'object':'bones2',       'expected':'pw'},     
             {'object':'bones3',       'expected':'mattress1'},
             {'object':'book1',        'expected':'shelf2'},
             {'object':'book2',        'expected':'mattress1'},
             {'object':'bottle1',      'expected':'table3'},     
             {'object':'bottle2',      'expected':'desk1'},
             {'object':'bottleopener1','expected':'desk1'},
             {'object':'chair1',       'expected':'jl'},
             {'object':'chair2',       'expected':'sq'},     
             {'object':'chandelier1',  'expected':'bh'},
             {'object':'cloak1',       'expected':'armoire1'},
             {'object':'desk1',        'expected':'jl'},
             {'object':'dinnerware1',  'expected':'table1'},     
             {'object':'dinnerware2',  'expected':'table3'},
             {'object':'dinnerware3',  'expected':'bh'},
             {'object':'eye1',         'expected':'ap'},
             {'object':'flames1',      'expected':'ap'},     
             {'object':'gem1',         'expected':'safe1'},
             {'object':'hearth1',      'expected':'kt'},
             {'object':'helmet1',      'expected':'table6'},
             {'object':'key1',         'expected':'trunk2'},     
             {'object':'keyrung1',     'expected':'jl'},
             {'object':'knife1',       'expected':'table2'},
             {'object':'lantern1',     'expected':'table4'},
             {'object':'lantern2',     'expected':'table5'},     
             {'object':'lever1',       'expected':'shelf3'},
             {'object':'lever2',       'expected':'ct'},
             {'object':'lockpick1',    'expected':'shelf1'},
             {'object':'matches1',     'expected':'table2'},     
             {'object':'mattress1',    'expected':'cl'},
             {'object':'mushrooms1',   'expected':'shelf1'},
             {'object':'note1',        'expected':'painting1'},
             {'object':'painting1',    'expected':'ca'},     
             {'object':'painting2',    'expected':'hw'},
             {'object':'ring1',        'expected':'altar1'},
             {'object':'rocks1',       'expected':'ce'},
             {'object':'rocks2',       'expected':'pw'},     
             {'object':'rug1',         'expected':'sr'},
             {'object':'rug2',         'expected':'hw'},   
             {'object':'runes1',       'expected':'wl'},
             {'object':'safe1',        'expected':'bd'},     
             {'object':'scroll1',      'expected':'desk1'},
             {'object':'shelf1',       'expected':'sr'},
             {'object':'shelf2',       'expected':'wl'},
             {'object':'shelf3',       'expected':'bd'},     
             {'object':'sign1',        'expected':'ot'},
             {'object':'stool1',       'expected':'ca'},  
             {'object':'stool2',       'expected':'cl'},
             {'object':'sword1',       'expected':'ce'},     
             {'object':'sword2',       'expected':'table6'},
             {'object':'table1',       'expected':'ca'},
             {'object':'table2',       'expected':'kt'},
             {'object':'table3',       'expected':'bh'},     
             {'object':'table4',       'expected':'wl'},
             {'object':'table5',       'expected':'sq'},
             {'object':'table6',       'expected':'ar'},
             {'object':'tapestries1',  'expected':'tr'},     
             {'object':'tools1',       'expected':'pw'},
             {'object':'trapdoor1',    'expected':'rug1'},
             {'object':'treasure1',    'expected':'trunk1'},
             {'object':'tree1',        'expected':'ot'},     
             {'object':'trunk1',       'expected':'tr'},
             {'object':'trunk2',       'expected':'bd'},
             {'object':'warhammer1',   'expected':'table6'} ]
 
    def test_ObjectLocation(self):
        for i in self.data:
            self.assertEqual(dm.getObjectLocation(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectKeyObject(unittest.TestCase):
    print("ObjectKeyObject")
    data = [ {'object':'altar1',       'expected':''}, 
             {'object':'apple1',       'expected':''},
             {'object':'apple2',       'expected':''},
             {'object':'armoire1',     'expected':''},
             {'object':'armor1',       'expected':''},
             {'object':'axe1',         'expected':''},
             {'object':'bearskin1',    'expected':''},
             {'object':'bed1',         'expected':''},
             {'object':'bed2',         'expected':''},
             {'object':'bones1',       'expected':''},
             {'object':'bones2',       'expected':''},     
             {'object':'bones3',       'expected':''},
             {'object':'book1',        'expected':''},
             {'object':'book2',        'expected':''},
             {'object':'bottle1',      'expected':'bottleopener1'},     
             {'object':'bottle2',      'expected':'bottleopener1'},
             {'object':'bottleopener1','expected':''},
             {'object':'chair1',       'expected':''},
             {'object':'chair2',       'expected':''},     
             {'object':'chandelier1',  'expected':'matches1'},
             {'object':'cloak1',       'expected':''},
             {'object':'desk1',        'expected':''},
             {'object':'dinnerware1',  'expected':''},     
             {'object':'dinnerware2',  'expected':''},
             {'object':'dinnerware3',  'expected':''},
             {'object':'eye1',         'expected':''},
             {'object':'flames1',      'expected':''},     
             {'object':'gem1',         'expected':''},
             {'object':'hearth1',      'expected':''},
             {'object':'helmet1',      'expected':''},
             {'object':'key1',         'expected':''},     
             {'object':'keyrung1',     'expected':''},
             {'object':'knife1',       'expected':''},
             {'object':'lantern1',     'expected':'matches1'},
             {'object':'lantern2',     'expected':'matches1'},     
             {'object':'lever1',       'expected':'ct'},
             {'object':'lever2',       'expected':'bd'},
             {'object':'lockpick1',    'expected':''},
             {'object':'matches1',     'expected':''},     
             {'object':'mattress1',    'expected':''},
             {'object':'mushrooms1',   'expected':''},
             {'object':'note1',        'expected':''},
             {'object':'painting1',    'expected':''},     
             {'object':'painting2',    'expected':''},
             {'object':'ring1',        'expected':''},
             {'object':'rocks1',       'expected':''},
             {'object':'rocks2',       'expected':''},     
             {'object':'rug1',         'expected':''},
             {'object':'rug2',         'expected':''},   
             {'object':'runes1',       'expected':''},
             {'object':'safe1',        'expected':'note1'},     
             {'object':'scroll1',      'expected':''},
             {'object':'shelf1',       'expected':''},
             {'object':'shelf2',       'expected':''},
             {'object':'shelf3',       'expected':''},     
             {'object':'sign1',        'expected':''},
             {'object':'stool1',       'expected':''},  
             {'object':'stool2',       'expected':''},
             {'object':'sword1',       'expected':''},     
             {'object':'sword2',       'expected':''},
             {'object':'table1',       'expected':''},
             {'object':'table2',       'expected':''},
             {'object':'table3',       'expected':''},     
             {'object':'table4',       'expected':''},
             {'object':'table5',       'expected':''},
             {'object':'table6',       'expected':''},
             {'object':'tapestries1',  'expected':''},     
             {'object':'tools1',       'expected':''},
             {'object':'trapdoor1',    'expected':'tr'},
             {'object':'treasure1',    'expected':''},
             {'object':'tree1',        'expected':''},     
             {'object':'trunk1',       'expected':'lockpick1'},
             {'object':'trunk2',       'expected':''},
             {'object':'warhammer1',   'expected':''} ]
 
    def test_ObjectKeyObject(self):
        for i in self.data:
            self.assertEqual(dm.getObjectKeyObject(i['object']),  i['expected'],  "Failed: " + i['object'])
 
class ObjectHealthPoints(unittest.TestCase):
    print("ObjectHealthPoints")
    data = [ {'object':'altar1',       'expected':-30}, 
             {'object':'apple1',       'expected':15},
             {'object':'apple2',       'expected':15},
             {'object':'armoire1',     'expected':0},
             {'object':'armor1',       'expected':0},
             {'object':'axe1',         'expected':0},
             {'object':'bearskin1',    'expected':0},
             {'object':'bed1',         'expected':10},
             {'object':'bed2',         'expected':20},
             {'object':'bones1',       'expected':0},
             {'object':'bones2',       'expected':0},     
             {'object':'bones3',       'expected':0},
             {'object':'book1',        'expected':0},
             {'object':'book2',        'expected':0},
             {'object':'bottle1',      'expected':25},     
             {'object':'bottle2',      'expected':35},
             {'object':'bottleopener1','expected':0},
             {'object':'chair1',       'expected':5},
             {'object':'chair2',       'expected':5},     
             {'object':'chandelier1',  'expected':0},
             {'object':'cloak1',       'expected':0},
             {'object':'desk1',        'expected':0},
             {'object':'dinnerware1',  'expected':0},     
             {'object':'dinnerware2',  'expected':0},
             {'object':'dinnerware3',  'expected':0},
             {'object':'eye1',         'expected':0},
             {'object':'flames1',      'expected':0},     
             {'object':'gem1',         'expected':0},
             {'object':'hearth1',      'expected':0},
             {'object':'helmet1',      'expected':0},
             {'object':'key1',         'expected':0},     
             {'object':'keyrung1',     'expected':0},
             {'object':'knife1',       'expected':0},
             {'object':'lantern1',     'expected':0},
             {'object':'lantern2',     'expected':0},     
             {'object':'lever1',       'expected':0},
             {'object':'lever2',       'expected':0},
             {'object':'lockpick1',    'expected':0},
             {'object':'matches1',     'expected':0},     
             {'object':'mattress1',    'expected':10},
             {'object':'mushrooms1',   'expected':30},
             {'object':'note1',        'expected':0},
             {'object':'painting1',    'expected':0},     
             {'object':'painting2',    'expected':0},
             {'object':'ring1',        'expected':0},
             {'object':'rocks1',       'expected':0},
             {'object':'rocks2',       'expected':0},     
             {'object':'rug1',         'expected':5},
             {'object':'rug2',         'expected':5},   
             {'object':'runes1',       'expected':0},
             {'object':'safe1',        'expected':0},     
             {'object':'scroll1',      'expected':0},
             {'object':'shelf1',       'expected':0},
             {'object':'shelf2',       'expected':0},
             {'object':'shelf3',       'expected':0},     
             {'object':'sign1',        'expected':0},
             {'object':'stool1',       'expected':2},  
             {'object':'stool2',       'expected':2},
             {'object':'sword1',       'expected':0},     
             {'object':'sword2',       'expected':0},
             {'object':'table1',       'expected':0},
             {'object':'table2',       'expected':0},
             {'object':'table3',       'expected':0},     
             {'object':'table4',       'expected':0},
             {'object':'table5',       'expected':0},
             {'object':'table6',       'expected':0},
             {'object':'tapestries1',  'expected':0},     
             {'object':'tools1',       'expected':0},
             {'object':'trapdoor1',    'expected':0},
             {'object':'treasure1',    'expected':0},
             {'object':'tree1',        'expected':0},     
             {'object':'trunk1',       'expected':0},
             {'object':'trunk2',       'expected':0},
             {'object':'warhammer1',   'expected':0} ]
 
    def test_ObjectHealthPoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectHealthPoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 
class ObjectDamagePoints(unittest.TestCase):
    print("ObjectDamagePoints")
    data = [ {'object':'altar1',       'expected':0}, 
             {'object':'apple1',       'expected':0},
             {'object':'apple2',       'expected':0},
             {'object':'armoire1',     'expected':0},
             {'object':'armor1',       'expected':0},
             {'object':'axe1',         'expected':25},
             {'object':'bearskin1',    'expected':0},
             {'object':'bed1',         'expected':0},
             {'object':'bed2',         'expected':0},
             {'object':'bones1',       'expected':0},
             {'object':'bones2',       'expected':0},     
             {'object':'bones3',       'expected':0},
             {'object':'book1',        'expected':0},
             {'object':'book2',        'expected':0},
             {'object':'bottle1',      'expected':0},     
             {'object':'bottle2',      'expected':0},
             {'object':'bottleopener1','expected':0},
             {'object':'chair1',       'expected':0},
             {'object':'chair2',       'expected':0},     
             {'object':'chandelier1',  'expected':0},
             {'object':'cloak1',       'expected':0},
             {'object':'desk1',        'expected':0},
             {'object':'dinnerware1',  'expected':0},     
             {'object':'dinnerware2',  'expected':0},
             {'object':'dinnerware3',  'expected':0},
             {'object':'eye1',         'expected':0},
             {'object':'flames1',      'expected':0},     
             {'object':'gem1',         'expected':0},
             {'object':'hearth1',      'expected':0},
             {'object':'helmet1',      'expected':0},
             {'object':'key1',         'expected':0},     
             {'object':'keyrung1',     'expected':0},
             {'object':'knife1',       'expected':10},
             {'object':'lantern1',     'expected':0},
             {'object':'lantern2',     'expected':0},     
             {'object':'lever1',       'expected':0},
             {'object':'lever2',       'expected':0},
             {'object':'lockpick1',    'expected':0},
             {'object':'matches1',     'expected':0},     
             {'object':'mattress1',    'expected':0},
             {'object':'mushrooms1',   'expected':0},
             {'object':'note1',        'expected':0},
             {'object':'painting1',    'expected':0},     
             {'object':'painting2',    'expected':0},
             {'object':'ring1',        'expected':0},
             {'object':'rocks1',       'expected':0},
             {'object':'rocks2',       'expected':0},     
             {'object':'rug1',         'expected':0},
             {'object':'rug2',         'expected':0},   
             {'object':'runes1',       'expected':0},
             {'object':'safe1',        'expected':0},     
             {'object':'scroll1',      'expected':0},
             {'object':'shelf1',       'expected':0},
             {'object':'shelf2',       'expected':0},
             {'object':'shelf3',       'expected':0},     
             {'object':'sign1',        'expected':0},
             {'object':'stool1',       'expected':0},  
             {'object':'stool2',       'expected':0},
             {'object':'sword1',       'expected':15},     
             {'object':'sword2',       'expected':20},
             {'object':'table1',       'expected':0},
             {'object':'table2',       'expected':0},
             {'object':'table3',       'expected':0},     
             {'object':'table4',       'expected':0},
             {'object':'table5',       'expected':0},
             {'object':'table6',       'expected':0},
             {'object':'tapestries1',  'expected':0},     
             {'object':'tools1',       'expected':0},
             {'object':'trapdoor1',    'expected':0},
             {'object':'treasure1',    'expected':0},
             {'object':'tree1',        'expected':0},     
             {'object':'trunk1',       'expected':0},
             {'object':'trunk2',       'expected':0},
             {'object':'warhammer1',   'expected':30} ]
 
    def test_ObjectDamagePoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectDamagePoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectProtectionPoints(unittest.TestCase):
    print("ObjectProtectionPoints")
    data = [ {'object':'altar1',       'expected':0}, 
             {'object':'apple1',       'expected':0},
             {'object':'apple2',       'expected':0},
             {'object':'armoire1',     'expected':0},
             {'object':'armor1',       'expected':20},
             {'object':'axe1',         'expected':0},
             {'object':'bearskin1',    'expected':0},
             {'object':'bed1',         'expected':0},
             {'object':'bed2',         'expected':0},
             {'object':'bones1',       'expected':0},
             {'object':'bones2',       'expected':0},     
             {'object':'bones3',       'expected':0},
             {'object':'book1',        'expected':0},
             {'object':'book2',        'expected':0},
             {'object':'bottle1',      'expected':0},     
             {'object':'bottle2',      'expected':0},
             {'object':'bottleopener1','expected':0},
             {'object':'chair1',       'expected':0},
             {'object':'chair2',       'expected':0},     
             {'object':'chandelier1',  'expected':0},
             {'object':'cloak1',       'expected':0},
             {'object':'desk1',        'expected':0},
             {'object':'dinnerware1',  'expected':0},     
             {'object':'dinnerware2',  'expected':0},
             {'object':'dinnerware3',  'expected':0},
             {'object':'eye1',         'expected':0},
             {'object':'flames1',      'expected':0},     
             {'object':'gem1',         'expected':0},
             {'object':'hearth1',      'expected':0},
             {'object':'helmet1',      'expected':5},
             {'object':'key1',         'expected':0},     
             {'object':'keyrung1',     'expected':0},
             {'object':'knife1',       'expected':0},
             {'object':'lantern1',     'expected':0},
             {'object':'lantern2',     'expected':0},     
             {'object':'lever1',       'expected':0},
             {'object':'lever2',       'expected':0},
             {'object':'lockpick1',    'expected':0},
             {'object':'matches1',     'expected':0},     
             {'object':'mattress1',    'expected':0},
             {'object':'mushrooms1',   'expected':0},
             {'object':'note1',        'expected':0},
             {'object':'painting1',    'expected':0},     
             {'object':'painting2',    'expected':0},
             {'object':'ring1',        'expected':0},
             {'object':'rocks1',       'expected':0},
             {'object':'rocks2',       'expected':0},     
             {'object':'rug1',         'expected':0},
             {'object':'rug2',         'expected':0},   
             {'object':'runes1',       'expected':0},
             {'object':'safe1',        'expected':0},     
             {'object':'scroll1',      'expected':0},
             {'object':'shelf1',       'expected':0},
             {'object':'shelf2',       'expected':0},
             {'object':'shelf3',       'expected':0},     
             {'object':'sign1',        'expected':0},
             {'object':'stool1',       'expected':0},  
             {'object':'stool2',       'expected':0},
             {'object':'sword1',       'expected':0},     
             {'object':'sword2',       'expected':0},
             {'object':'table1',       'expected':0},
             {'object':'table2',       'expected':0},
             {'object':'table3',       'expected':0},     
             {'object':'table4',       'expected':0},
             {'object':'table5',       'expected':0},
             {'object':'table6',       'expected':0},
             {'object':'tapestries1',  'expected':0},     
             {'object':'tools1',       'expected':0},
             {'object':'trapdoor1',    'expected':0},
             {'object':'treasure1',    'expected':0},
             {'object':'tree1',        'expected':0},     
             {'object':'trunk1',       'expected':0},
             {'object':'trunk2',       'expected':0},
             {'object':'warhammer1',   'expected':0} ]
 
    def test_ObjectProtectionPoints(self):
        for i in self.data:
            self.assertEqual(dm.getObjectProtectionPoints(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class ObjectWeight(unittest.TestCase):
    print("ObjectWeight")
    data = [ {'object':'altar1',       'expected':1000}, 
             {'object':'apple1',       'expected':5},
             {'object':'apple2',       'expected':5},
             {'object':'armoire1',     'expected':500},
             {'object':'armor1',       'expected':80},
             {'object':'axe1',         'expected':20},
             {'object':'bearskin1',    'expected':100},
             {'object':'bed1',         'expected':200},
             {'object':'bed2',         'expected':250},
             {'object':'bones1',       'expected':20},
             {'object':'bones2',       'expected':20},     
             {'object':'bones3',       'expected':25},
             {'object':'book1',        'expected':5},
             {'object':'book2',        'expected':5},
             {'object':'bottle1',      'expected':5},     
             {'object':'bottle2',      'expected':5},
             {'object':'bottleopener1','expected':1},
             {'object':'chair1',       'expected':50},
             {'object':'chair2',       'expected':50},     
             {'object':'chandelier1',  'expected':200},
             {'object':'cloak1',       'expected':5},
             {'object':'desk1',        'expected':200},
             {'object':'dinnerware1',  'expected':50},     
             {'object':'dinnerware2',  'expected':50},
             {'object':'dinnerware3',  'expected':25},
             {'object':'eye1',         'expected':0},
             {'object':'flames1',      'expected':0},     
             {'object':'gem1',         'expected':1},
             {'object':'hearth1',      'expected':500},
             {'object':'helmet1',      'expected':30},
             {'object':'key1',         'expected':1},     
             {'object':'keyrung1',     'expected':100},
             {'object':'knife1',       'expected':10},
             {'object':'lantern1',     'expected':15},
             {'object':'lantern2',     'expected':15},     
             {'object':'lever1',       'expected':5},
             {'object':'lever2',       'expected':5},
             {'object':'lockpick1',    'expected':1},
             {'object':'matches1',     'expected':1},     
             {'object':'mattress1',    'expected':100},
             {'object':'mushrooms1',   'expected':5},
             {'object':'note1',        'expected':1},
             {'object':'painting1',    'expected':20},     
             {'object':'painting2',    'expected':20},
             {'object':'ring1',        'expected':1},
             {'object':'rocks1',       'expected':60},
             {'object':'rocks2',       'expected':70},     
             {'object':'rug1',         'expected':100},
             {'object':'rug2',         'expected':100},   
             {'object':'runes1',       'expected':1000},
             {'object':'safe1',        'expected':1000},     
             {'object':'scroll1',      'expected':5},
             {'object':'shelf1',       'expected':200},
             {'object':'shelf2',       'expected':200},
             {'object':'shelf3',       'expected':200},     
             {'object':'sign1',        'expected':15},
             {'object':'stool1',       'expected':10},  
             {'object':'stool2',       'expected':10},
             {'object':'sword1',       'expected':25},     
             {'object':'sword2',       'expected':30},
             {'object':'table1',       'expected':300},
             {'object':'table2',       'expected':300},
             {'object':'table3',       'expected':300},     
             {'object':'table4',       'expected':300},
             {'object':'table5',       'expected':300},
             {'object':'table6',       'expected':300},
             {'object':'tapestries1',  'expected':30},     
             {'object':'tools1',       'expected':50},
             {'object':'trapdoor1',    'expected':10},
             {'object':'treasure1',    'expected':100},
             {'object':'tree1',        'expected':1000},     
             {'object':'trunk1',       'expected':50},
             {'object':'trunk2',       'expected':50},
             {'object':'warhammer1',   'expected':50} ]
 
    def test_ObjectWeight(self):
        for i in self.data:
            self.assertEqual(dm.getObjectWeight(i['object']),  i['expected'],  "Failed: " + i['object'])
 

class GhostVisible(unittest.TestCase):
    print("GhostVisible")
    data = [ {'ghost':'blinky',        'expected':False}, 
             {'ghost':'clyde',         'expected':False},
             {'ghost':'inky',          'expected':False},
             {'ghost':'pinky',         'expected':False} ]

    def test_GhostVisible(self):
        for i in self.data:
            self.assertEqual(dm.isGhostVisible(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
class GhostLocation(unittest.TestCase):
    print("GhostLocation")
    data = [ {'ghost':'blinky',        'expected':'pw'}, 
             {'ghost':'clyde',         'expected':'bh'},
             {'ghost':'inky',          'expected':'ct'},
             {'ghost':'pinky',         'expected':'sq'} ]

    def test_GhostLocation(self):
        for i in self.data:
            self.assertEqual(dm.getGhostLocation(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
class GhostHealth(unittest.TestCase):
    print("GhostHealth")
    data = [ {'ghost':'blinky',        'expected':100}, 
             {'ghost':'clyde',         'expected':80},
             {'ghost':'inky',          'expected':60},
             {'ghost':'pinky',         'expected':40} ]

    def test_GhostHealth(self):
        for i in self.data:
            self.assertEqual(dm.getGhostHealth(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 
 
class GhostDamagePoints(unittest.TestCase):
    print("GhostDamagePoints")
    data = [ {'ghost':'blinky',        'expected':20}, 
             {'ghost':'clyde',         'expected':15},
             {'ghost':'inky',          'expected':10},
             {'ghost':'pinky',         'expected':5} ]

    def test_GhostDamagePoints(self):
        for i in self.data:
            self.assertEqual(dm.getGhostDamagePoints(i['ghost']),  i['expected'],  "Failed: " + i['ghost'])
 

class PlayerAndInventory(unittest.TestCase):
    print("PlayerAndInventory")
    def test_PlayerAndInventory(self):
        self.assertEqual(dm.getPlayerHealth(), 100, "Failed player health")
        self.assertTrue(dm.isPlayerVisible(),  "Failed player visible")
        self.assertEqual(dm.getPlayerLocation(), 'ce', "Failed player location")
        self.assertEqual(dm.getInventoryCapacity(), 200, "Failed inventory capacity")
        self.assertItemsEqual(dm.getInventoryObjects(), [], "Failed inventory objects")



         
    
if __name__ == '__main__':
	unittest.main()
